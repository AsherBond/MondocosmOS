<h2>DESCRIPTION</h2>

<em>d.linegraph</em> is a primitive program to draw simple x,y line graphs
based on numerical data contained in separate files.
<p>
Data file format<br>
The X and Y data files for the graph are essentially a column of numbers in
each file, with one input number per line.  The program expects that each X
value will have a corresponding Y value, therefore the number of lines in
each data input file should be the same.  Essentially, the X data becomes
the X axis reference to which the Y data is plotted as a line. Therefore,
the X data should be a monotonically increasing progression of numbers (i.e.
"1,2,3,..."; "0, 10, 100, 1000,..."; "...-5,-1,0,1,5...").  If multiple Y
data files are used, the Y axis scale will be based on the range of minimum
and maximum values from all Y files, then all Y data given will be graphed
according to that Y scale. Therefore, if multiple Y data inputs are used
with dissimilar units, the graph produced comparing the two will be
deceptive.

<p>
<dl>
<dt><b>directoryname</b>
<dd>Path to the directory where the input files are located. If this option
is not used, the <em>d.linegraph</em> looks for files in the current directory.
<dd>Example format: directory/usr/grass/data/graph

<dt><b>ycoloroption[,option,...]]</b>
<dd>Color to be used for drawing the lines in the graph. If multiple Y data
files are used, an equal number of colors may be used to control the colors
of the lines. Colors will be assigned to Y data in respect to the sequence
of instantiation on the command  line.  Options are listed below.  By
default, a series of colors will be chosen by the program if none are
provided upon invocation.
<dd>Order of default colors: yellow, red, green, violet, blue, orange, gray,
brown, magenta, white, indigo).

<dt><b>titlecoloroption</b>
<dd>The color to be used for titles, axis lines, tics, and scale numbers.  
<dd>Default: "white"
<dd>Color options: red, orange, yellow, green, blue, indigo, violet,
magenta, brown, gray, white, and black.

<dt><b>xtitlevalue</b>
<dd>Title to describe X data. Will be centered beneath the graph. Default
is no title unless the need for a unit descriptor is computed by the program
(i.e. X: title in hundreds).  Also, see NOTES section (below) for a format
caveat for multi-word titles.

<dt><b>ytitlevalue</b>
<dd>Title to describe Y data. Will be centered beneath the X data title.
Default is no title unless the need for a unit descriptor is computed by
the program (i.e. Y: ttiittllee in thousands). Also, see NOTES section
(below) for a format caveat for multi-word titles. In the case of graphs
with multiple lines, one may wish to use more specific title placement by
using the <em>d.text</em> or <em>v.label</em> programs.

<dt><b>titlevalue</b>
<dd>Title to describe the graph. Will be centered over the top of graph.
Default is no title. See NOTES section (below) for a format caveat for
multi-word titles.
</dl>

<h2>NOTES</h2>
Since the command line parser is not amiable to multiple word inputs, to
input titles of more than one word, use the underscore character ("") to
represent spaces (" ").
<p>
Example: "titleCensusdata1990" would be printed over the graph as "Census
data 1990".
<p>
The way the program locates and labels tic marks is less than perfect: 1)
although distances between Y tics is proportional to the value, they are
not proportional on the X axis; 2) decimal values between -1 and 1 can be
printed on the X axis, but not on Y. (With respect to the later, the input
for Y values can all be multiplied by a factor of 10 before graphing).

<p>
It might be easier to use a 3rd party tool such as xgraph or GNUplot instead
of <em>d.linegraph</em>.
.
(You can make GNUplot output pretty by using its SVG or PostScript output
driver and converting that back into a rasterized image in a paint program)

<h2>SEE ALSO</h2>
<em>
<a href="d.frame.html">d.frame</A>,
<a href="d.text.html">d.text</A>,
<a href="v.label.html">v.label</A>
</em>

<h2>AUTHOR</h2>
Chris Rewerts, Agricultural Engineering, Purdue University

<p>
<i>Last changed: $Date$</i>
