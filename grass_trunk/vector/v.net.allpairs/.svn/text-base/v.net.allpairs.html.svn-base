<h2>DESCRIPTION</h2>

<em>v.net.allpairs</em> computes the shortest path between each select 
node and all other nodes. 

<h2>NOTES</h2>

An attribute table is created and linked to <b>layer</b>. The table 
contains three columns: <em>cat</em>, <em>to_cat</em>, <em>cost</em>. 
Each entry denotes the cost of the shortest path from <em>cat</em> to 
<em>to_cat</em>. If the cost is negative then no path exists. If points 
are specified by <b>cats, layer</b> or <b>where</b> parameters then the 
table is filled only for the selected points. In other words, <em>cat</em> 
columns contains only selected points but the distances are computed and 
updated for <em>all</em> other nodes.<br>
If flag <b>-a</b> is set then new points are added on nodes without points. 
These points have the largest category. Precisely, the category of each new 
point is larger than any of the old categories. If the flag is not set 
then no new points are created and hence the attribute table stores the 
costs only between the points already present in the input. Output consists 
of all points mentioned in either of the columns.<br>
If <b>abcolumn</b> is not given then then the same costs are used for 
forward and backward arcs.

<h2>EXAMPLES</h2>

Find shortest path from each intersection with pedestrian crossing to 
every other point using <em>SHAPE_LEN</em> for the cost of traversing 
the arcs in both directions.
<div class="code"><pre>
v.net.allpairs input=roads output=roads_pairs afcol=SHAPE_LEN where="crossing=1"
</pre></div>
<p>


<h2>SEE ALSO</h2>

<em>
<a href="v.net.path">v.net.path</a>,
<a href="v.net.distance">v.net.distance</a>
</em>


<h2>AUTHORS</h2>

Daniel Bundala, Google Summer of Code 2009, Student<br>
Wolf Bergenheim, Mentor

<p>
<i>Last changed: $Date$</i>
