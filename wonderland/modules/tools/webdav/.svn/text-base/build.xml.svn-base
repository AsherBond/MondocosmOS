<?xml version="1.0" encoding="UTF-8"?>
<project name="wonderland-webdav-module" default="dist" basedir=".">
    <!-- current directory needed in all scripts -->
    <dirname property="current.dir" file="${ant.file.wonderland-webdav-module}"/>
    <property file="${current.dir}/my.module.properties"/>

    <property name="modules.dir" location="${wonderland.dir}/modules"/>
    <property name="web.dir" location="${modules.dir}/../web"/>

    <property name="module.src" value="${module.plugin.src}"/>
    <property name="module.jarname" value="${module.name}"/>
    
    <!-- import common build file -->
    <import file="${modules.dir}/build-tools/build-scripts/module-build.xml"/>

    <!-- import web build file -->
    <import file="${web.dir}/build-tools/build-scripts/web-build.xml"/>

    <pathconvert property="module-client.classpath">
        <path location="${current.dir}/lib/webdavclient4j-core-0.92.jar"/>
        <path location="${current.dir}/../../foundation/content-repository/build/client/contentrepo-client.jar"/>
    </pathconvert>

    <pathconvert property="module-common.classpath">
        <path location="${core.dir}/ext/common/commons-httpclient-3.0.1.jar"/>
        <path location="${current.dir}/lib/webdavclient4j-core-0.92.jar"/>
        <path location="${current.dir}/../../foundation/content-repository/build/client/contentrepo-client.jar"/>
    </pathconvert>

    <pathconvert property="module-web.classpath">
        <path location="${web.dir}/front/dist/wonderland-webadmin-core.jar"/>
        <path location="${current.dir}/../../foundation/content-repository/build/lib/contentrepo-spi.jar"/>
        <path location="${current.dir}/../../foundation/security/build/lib/weblib/wonderland-security-weblib.jar"/>
    </pathconvert>

    <target name="build" depends="-module-init, -module-compile-common, 
                                                -module-compile-server,
                                                -module-compile-client,
                                                -webdav-compile-web"/>

    <target name="-webdav-compile-web" depends="-module-init, -module-compile-common">
        <wl-compile>
            <compile-classes>
                <include name="${module.src}/web/**"/>
            </compile-classes>

            <compile-classpath>
                <pathelement path="${web.classpath}"/>
                <pathelement path="${module-web.classpath}"/>
            </compile-classpath>
        </wl-compile>
    </target>

    <target name="dist" depends="build">
        <mkdir dir="${module.dist.dir}"/>
        
        <module name="${module.name}" majorVersion="0" minorVersion="5" miniVersion="1" jarfile="${module.dist.dir}/${module.name}.jar"
                moduleDescription="${module.description}" builddir="${build.dir}">

            <requires name="content-repository" version="0" minorVersion="5"/>

            <part name="web">
                <jar name="content.war">
                    <zipfileset dir="${build.classes.dir}" prefix="WEB-INF/classes">
                        <include name="${module.src}/web/content/**"/>
                    </zipfileset>

                    <fileset dir="${current.dir}/content-web"/>
                </jar>

                <jar name="browser.war">
                    <zipfileset dir="${build.classes.dir}" prefix="WEB-INF/classes">
                        <include name="${module.src}/web/**"/>
                        <exclude name="${module.src}/web/content/**"/>
                        <include name="${module.src}/common/**"/>
                    </zipfileset>

                    <fileset dir="${current.dir}/browser-web"/>
                </jar>
            </part>

            <client dir="${current.dir}/lib">
                <include name="*.jar"/>

                <clientjar name="webdav-client" basedir="${build.classes.dir}">
                    <clientplugin provider="org.jdesktop.wonderland.modules.webdav.client.WebdavClientPlugin"/>

                    <include name="${module.src}/client/**"/>
                    <include name="${module.src}/common/**"/>
                </clientjar>
            </client>
        </module>
    </target>                                  
                 
    <target name="deploy" depends="dist, -module-deploy"/>
    <target name="clean" depends="-module-clean"/>
</project>
