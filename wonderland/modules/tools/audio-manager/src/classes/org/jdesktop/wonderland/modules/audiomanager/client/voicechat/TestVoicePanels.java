/*
 * Project Wonderland
 *
 * Copyright (c) 2004-2009, Sun Microsystems, Inc., All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * Sun designates this particular file as subject to the "Classpath"
 * exception as provided by Sun in the License file that accompanied
 * this code.
 */
package org.jdesktop.wonderland.modules.audiomanager.client.voicechat;

import java.awt.BorderLayout;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import org.jdesktop.wonderland.modules.audiomanager.client.voicechat.AddHUDPanel.Mode;

/**
 *
 * @author nsimpson
 */
public class TestVoicePanels extends javax.swing.JFrame implements KeyListener {

    private AddHUDPanel addHUDPanel;

    public TestVoicePanels() {
        initComponents();
        addHUDPanel = new AddHUDPanel();
        add(addHUDPanel, BorderLayout.CENTER);
        setFocusable(true);
        addKeyListener(this);

        pack();
    }

    public void keyPressed(KeyEvent e) {
        System.err.println("--- key: " + e.getKeyChar());
        if (e.getKeyCode() == KeyEvent.VK_A) {
            addHUDPanel.setMode(Mode.ADD);
        } else if (e.getKeyCode() == KeyEvent.VK_I) {
            addHUDPanel.setMode(Mode.INITIATE);
        } else if (e.getKeyCode() == KeyEvent.VK_H) {
            addHUDPanel.setMode(Mode.HOLD);
        } else if (e.getKeyCode() == KeyEvent.VK_P) {
            addHUDPanel.setMode(Mode.IN_PROGRESS);
        }
    }

    public void keyReleased(KeyEvent e) {
    }

    public void keyTyped(KeyEvent e) {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TestVoicePanels().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
