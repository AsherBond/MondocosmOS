/**
 * Project Wonderland
 *
 * Copyright (c) 2004-2009, Sun Microsystems, Inc., All Rights Reserved
 *
 * Redistributions in source code form must reproduce the above
 * copyright and this condition.
 *
 * The contents of this file are subject to the GNU General Public
 * License, Version 2 (the "License"); you may not use this file
 * except in compliance with the License. A copy of the License is
 * available at http://www.opensource.org/licenses/gpl-license.php.
 *
 * Sun designates this particular file as subject to the "Classpath"
 * exception as provided by Sun in the License file that accompanied
 * this code.
 */

package org.jdesktop.wonderland.modules.jmecolladaloader.client.cell;

import javax.swing.JPanel;
//import org.jdesktop.wonderland.client.cell.properties.annotation.CellProperties;
import org.jdesktop.wonderland.client.cell.properties.CellPropertiesEditor;
//import org.jdesktop.wonderland.client.cell.properties.spi.CellPropertiesSPI;
import org.jdesktop.wonderland.common.cell.state.CellServerState;
import org.jdesktop.wonderland.common.cell.state.ModelCellServerState;

/**
 * A property sheet for the sample cell type
 *
 * @author Jordan Slott <jslott@dev.java.net>
 */
//@CellProperties
public class JmeColladaCellProperties extends javax.swing.JPanel /*implements CellPropertiesSPI*/ {
    private CellPropertiesEditor editor = null;

    /** Creates new form SampleCellProperties */
    public JmeColladaCellProperties() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        authorTF = new javax.swing.JTextField();

        jLabel1.setText("Model Author :");

        authorTF.setEditable(false);
        authorTF.setText("jTextField1");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(authorTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 189, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(authorTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(138, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorTF;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public Class getServerCellStateClass() {
       return ModelCellServerState.class;
    }

    public String getDisplayName() {
        return "Model Cell";
    }

////    public JPanel getPropertiesJPanel(CellPropertiesEditor editor) {
////        this.editor = editor;
////        return this;
////    }

    public <T extends CellServerState> void updateGUI(T cellServerState) {
//        authorTF.setText(((JmeColladaCellServerState)cellServerState).getModelAuthor());
    }

    public <T extends CellServerState> void getCellServerState(T state) {
    }
}
