############################################################
#  \tLogging Configuration File
#
# java -Djava.util.logging.config.file=logging.properties
############################################################

############################################################
#  \tGlobal properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers = java.util.logging.ConsoleHandler
handlers = java.util.logging.ConsoleHandler
#handlers = java.util.logging.FileHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
#.level = FINE
.level = WARNING

# Limit the messages that are printed on the console to at least this level:
java.util.logging.ConsoleHandler.level = WARNING
#java.util.logging.FileHandler.level = WARNING

# Specify the console log formatter:
#java.util.logging.ConsoleHandler.formatter = com.sun.gi.utils.OneLineFormatter

#java.util.logging.FileHandler.limit = 10000000
#java.util.logging.FileHandler.count = 1
#java.util.logging.FileHandler.pattern = %t/wonderland-client-%g.log

############################################################
# Facility specific properties.
############################################################

#org.jdesktop.wonderland.level=INFO

#com.sun.mpk20.voicelib.level = WARNING
#sun.awt.level = WARNING
#java.awt.level = WARNING
#javax.swing.level = WARNING
#com.sun.sgs.level = WARNING
wonderland.config.level = INFO
#com.jme.level = WARNING
com.jmex.model.collada.ThreadSafeColladaImporter.level = WARNING
#com.jmex.level = WARNING

# For debugging state machine
#imi.character.statemachine.GameState.level = ALL
#imi.loaders.collada.InstructionProcessor.level = ALL

#com.sun.sgs.impl.service.channel.level=ALL
#com.sun.sgs.impl.service.session.level=ALL

#org.jdesktop.wonderland.client.input.level=INFO
#org.jdesktop.wonderland.client.assetmgr.AssetManager.level = WARNING
#org.jdesktop.wonderland.client.softphone.level = WARNING
#org.jdesktop.wonderland.client.cell.CellCacheBasicImpl.level = WARNING

# For debugging avatar state machine
#imi.character.statemachine.GameState.level=ALL
imi.character.level=SEVERE
org.collada.xml_walker.level = SEVERE

com.jme.util.export.binary.BinaryImporter.level = SEVERE

#org.jdesktop.wonderland.modules.avatarbase.level = ALL

# FINEST = TraceGL, FINE = DebugGL WARNING = GLImpl
com.jme.system.jogl.JOGLDisplaySystem.level = FINE
com.jme.scene.state.jogl.shader.JOGLShaderUtil.level = OFF

#org.jdesktop.wonderland.modules.appbase.client.view.View2DEntity.level=FINEST
#org.jdesktop.wonderland.modules.xremwin.client.AppXrw.level=INFO
#org.jdesktop.wonderland.modules.appbase.client.Window2D.level=FINEST

#org.jdesktop.wonderland.modules.avatarbase.client.AvatarConfigManager.level=ALL
#org.jdesktop.wonderland.client.jme.cellrenderer.BasicRenderer.level = FINE
#org.jdesktop.wonderland.modules.avatarbase.client.jme.level = INFO
#org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.WonderlandAvatarCache.level=ALL
#org.jdesktop.wonderland.client.assetmgr.content.WlContentAssetRepository.level=ALL
#org.jdesktop.wonderland.modules.avatarbase.client.jme.level = INFO

# AudioManagerClient level should be INFO so that softphone attach info is printed in the console
org.jdesktop.wonderland.modules.audiomanager.client.AudioManagerClient.level = INFO

# TODO: Instrumentation for debugging 670: Part 3 of 3. Enable verbosity for App2DCell transform logging.
# Parts 1 and 2 are in App2DCell.
#org.jdesktop.wonderland.modules.appbase.client.cell.App2D.CellTransform.level=INFO
