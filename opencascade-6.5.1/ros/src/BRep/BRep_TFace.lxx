// File:	BRep_TFace.lxx
// Created:	Tue Aug 25 15:35:52 1992
// Author:	Modelistation
//		<model@phylox>


//=======================================================================
//function : Surface
//purpose  : 
//=======================================================================

 inline const Handle(Geom_Surface)&  BRep_TFace::Surface()const 
{
  return mySurface;
}


//=======================================================================
//function : Triangulation
//purpose  : 
//=======================================================================

 inline const Handle(Poly_Triangulation)&  BRep_TFace::Triangulation()const 
{
  return myTriangulation;
}


//=======================================================================
//function : Location
//purpose  : 
//=======================================================================

 inline const TopLoc_Location&  BRep_TFace::Location()const 
{
  return myLocation;
}


//=======================================================================
//function : Tolerance
//purpose  : 
//=======================================================================

 inline Standard_Real  BRep_TFace::Tolerance()const 
{
  return myTolerance;
}


//=======================================================================
//function : Surface
//purpose  : 
//=======================================================================

inline void  BRep_TFace::Surface(const Handle(Geom_Surface)& S)
{
  mySurface = S;
}

//=======================================================================
//function : Triangulation
//purpose  : 
//=======================================================================

inline void  BRep_TFace::Triangulation(const Handle(Poly_Triangulation)& T)
{
  myTriangulation = T;
}


//=======================================================================
//function : Location
//purpose  : 
//=======================================================================

 inline void  BRep_TFace::Location(const TopLoc_Location& L)
{
  myLocation = L;
}


//=======================================================================
//function : Tolerance
//purpose  : 
//=======================================================================

 inline void  BRep_TFace::Tolerance(const Standard_Real T)
{
  myTolerance = T;
}




//=======================================================================
//function : NaturalRestriction
//purpose  : 
//=======================================================================

 inline Standard_Boolean  BRep_TFace::NaturalRestriction()const 
{
  return myNaturalRestriction;
}


//=======================================================================
//function : NaturalRestriction
//purpose  : 
//=======================================================================

 inline void  BRep_TFace::NaturalRestriction(const Standard_Boolean N)
{
  myNaturalRestriction = N;
}


