# Makefile.in generated by automake 1.7.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
top_srcdir = @top_srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@


# Makefile.am for Open Cascade toolkit TKVoxel
srcdir = @srcdir@

VPATH = @srcdir@ : \
@top_srcdir@/drv/Voxel : @top_srcdir@/src/Voxel

ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSF_FPELibs_LIB = @CSF_FPELibs_LIB@
CSF_FREETYPE_INCLUDES = @CSF_FREETYPE_INCLUDES@
CSF_FTGL_INCLUDES = @CSF_FTGL_INCLUDES@
CSF_FTGL_LIB = @CSF_FTGL_LIB@
CSF_FreeImagePlus_INCLUDES = @CSF_FreeImagePlus_INCLUDES@
CSF_FreeImagePlus_LIB = @CSF_FreeImagePlus_LIB@
CSF_GL2PS_INCLUDES = @CSF_GL2PS_INCLUDES@
CSF_GL2PS_LIB = @CSF_GL2PS_LIB@
CSF_MotifLibs_LIB = @CSF_MotifLibs_LIB@
CSF_OpenGlLibs_INCLUDES = @CSF_OpenGlLibs_INCLUDES@
CSF_OpenGlLibs_LIB = @CSF_OpenGlLibs_LIB@
CSF_QT_INCLUDES = @CSF_QT_INCLUDES@
CSF_QT_LIB = @CSF_QT_LIB@
CSF_SOCKETLibs_LIB = @CSF_SOCKETLibs_LIB@
CSF_TBB_INCLUDES = @CSF_TBB_INCLUDES@
CSF_TBB_LIB = @CSF_TBB_LIB@
CSF_TclLibs_INCLUDES = @CSF_TclLibs_INCLUDES@
CSF_TclLibs_LIB = @CSF_TclLibs_LIB@
CSF_TclTkLibs_INCLUDES = @CSF_TclTkLibs_INCLUDES@
CSF_TclTkLibs_LIB = @CSF_TclTkLibs_LIB@
CSF_ThreadLibs_LIB = @CSF_ThreadLibs_LIB@
CSF_XmuLibs_INCLUDES = @CSF_XmuLibs_INCLUDES@
CSF_XmuLibs_LIB = @CSF_XmuLibs_LIB@
CSF_XwLibs_LIB = @CSF_XwLibs_LIB@
CSF_advapi32_LIB = @CSF_advapi32_LIB@
CSF_gdi32_LIB = @CSF_gdi32_LIB@
CSF_user32_LIB = @CSF_user32_LIB@
CSF_wsock32_LIB = @CSF_wsock32_LIB@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXCPPFLAGS = @CXXCPPFLAGS@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_DE_FALSE = @ENABLE_DE_FALSE@
ENABLE_DE_TRUE = @ENABLE_DE_TRUE@
ENABLE_DRAW_FALSE = @ENABLE_DRAW_FALSE@
ENABLE_DRAW_TRUE = @ENABLE_DRAW_TRUE@
ENABLE_MODEL_FALSE = @ENABLE_MODEL_FALSE@
ENABLE_MODEL_TRUE = @ENABLE_MODEL_TRUE@
ENABLE_OCAF_FALSE = @ENABLE_OCAF_FALSE@
ENABLE_OCAF_TRUE = @ENABLE_OCAF_TRUE@
ENABLE_VIS_FALSE = @ENABLE_VIS_FALSE@
ENABLE_VIS_TRUE = @ENABLE_VIS_TRUE@
ENABLE_WRAPPERS_FALSE = @ENABLE_WRAPPERS_FALSE@
ENABLE_WRAPPERS_TRUE = @ENABLE_WRAPPERS_TRUE@
EXEEXT = @EXEEXT@
HAVE_FREEIMAGE_FALSE = @HAVE_FREEIMAGE_FALSE@
HAVE_FREEIMAGE_TRUE = @HAVE_FREEIMAGE_TRUE@
HAVE_FREETYPE_FALSE = @HAVE_FREETYPE_FALSE@
HAVE_FREETYPE_TRUE = @HAVE_FREETYPE_TRUE@
HAVE_FTGL_FALSE = @HAVE_FTGL_FALSE@
HAVE_FTGL_TRUE = @HAVE_FTGL_TRUE@
HAVE_GL2PS_FALSE = @HAVE_GL2PS_FALSE@
HAVE_GL2PS_TRUE = @HAVE_GL2PS_TRUE@
HAVE_GL_FALSE = @HAVE_GL_FALSE@
HAVE_GL_TRUE = @HAVE_GL_TRUE@
HAVE_QT_FALSE = @HAVE_QT_FALSE@
HAVE_QT_TRUE = @HAVE_QT_TRUE@
HAVE_TBB_FALSE = @HAVE_TBB_FALSE@
HAVE_TBB_TRUE = @HAVE_TBB_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TCL_VERSION = @TCL_VERSION@
TK_VERSION = @TK_VERSION@
U = @U@
VERSION = @VERSION@
YACC = @YACC@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
platform = @platform@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

AM_CXXFLAGS = 

AM_CFLAGS = 

INCLUDES = $(STLPort_INCLUDES)  \
-I@top_srcdir@/inc \
-I@top_srcdir@/drv/Voxel -I@top_srcdir@/src/Voxel


lib_LTLIBRARIES = libTKVoxel.la

libTKVoxel_la_LIBADD = \
../TKMath/libTKMath.la \
../TKernel/libTKernel.la \
../TKService/libTKService.la \
../TKMesh/libTKMesh.la \
../TKV3d/libTKV3d.la \
../TKG2d/libTKG2d.la \
../TKV2d/libTKV2d.la \
../TKBRep/libTKBRep.la \
../TKGeomBase/libTKGeomBase.la \
../TKG3d/libTKG3d.la \
../TKTopAlgo/libTKTopAlgo.la \
$(STLPort_LIB) 


libTKVoxel_la_SOURCES = \
@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx \
@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx \
@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx \
@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx \
@top_srcdir@/src/Voxel/Voxel_DS.cxx \
@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx \
@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx \
@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx \
@top_srcdir@/src/Voxel/Voxel_Prs.cxx \
@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx \
@top_srcdir@/src/Voxel/Voxel_Reader.cxx \
@top_srcdir@/src/Voxel/Voxel_Selector.cxx \
@top_srcdir@/src/Voxel/Voxel_SplitData.cxx \
@top_srcdir@/src/Voxel/Voxel_Writer.cxx

subdir = adm/make/TKVoxel
mkinstalldirs = $(SHELL) $(top_srcdir)/make/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libTKVoxel_la_LDFLAGS =
libTKVoxel_la_DEPENDENCIES = ../TKMath/libTKMath.la \
	../TKernel/libTKernel.la ../TKService/libTKService.la \
	../TKMesh/libTKMesh.la ../TKV3d/libTKV3d.la \
	../TKG2d/libTKG2d.la ../TKV2d/libTKV2d.la \
	../TKBRep/libTKBRep.la ../TKGeomBase/libTKGeomBase.la \
	../TKG3d/libTKG3d.la ../TKTopAlgo/libTKTopAlgo.la
am_libTKVoxel_la_OBJECTS = Voxel_BoolDS.lo Voxel_BooleanOperation.lo \
	Voxel_CollisionDetection.lo Voxel_ColorDS.lo Voxel_DS.lo \
	Voxel_FastConverter.lo Voxel_FloatDS.lo Voxel_OctBoolDS.lo \
	Voxel_Prs.lo Voxel_ROctBoolDS.lo Voxel_Reader.lo \
	Voxel_Selector.lo Voxel_SplitData.lo Voxel_Writer.lo
libTKVoxel_la_OBJECTS = $(am_libTKVoxel_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/make/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Voxel_BoolDS.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_BooleanOperation.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_CollisionDetection.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_ColorDS.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_DS.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_FastConverter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_FloatDS.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_OctBoolDS.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_Prs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_ROctBoolDS.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_Reader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_Selector.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_SplitData.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Voxel_Writer.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libTKVoxel_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libTKVoxel_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cxx .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  adm/make/TKVoxel/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libTKVoxel.la: $(libTKVoxel_la_OBJECTS) $(libTKVoxel_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libTKVoxel_la_LDFLAGS) $(libTKVoxel_la_OBJECTS) $(libTKVoxel_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_BoolDS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_BooleanOperation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_CollisionDetection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_ColorDS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_DS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_FastConverter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_FloatDS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_OctBoolDS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_Prs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_ROctBoolDS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_Reader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_Selector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_SplitData.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Voxel_Writer.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cxx.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cxx.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cxx.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

Voxel_BoolDS.o: @top_srcdir@/src/Voxel/Voxel_BoolDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_BoolDS.o -MD -MP -MF "$(DEPDIR)/Voxel_BoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_BoolDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_BoolDS.Tpo" "$(DEPDIR)/Voxel_BoolDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_BoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx' object='Voxel_BoolDS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_BoolDS.Po' tmpdepfile='$(DEPDIR)/Voxel_BoolDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_BoolDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx

Voxel_BoolDS.obj: @top_srcdir@/src/Voxel/Voxel_BoolDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_BoolDS.obj -MD -MP -MF "$(DEPDIR)/Voxel_BoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_BoolDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_BoolDS.Tpo" "$(DEPDIR)/Voxel_BoolDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_BoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx' object='Voxel_BoolDS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_BoolDS.Po' tmpdepfile='$(DEPDIR)/Voxel_BoolDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_BoolDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx'; fi`

Voxel_BoolDS.lo: @top_srcdir@/src/Voxel/Voxel_BoolDS.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_BoolDS.lo -MD -MP -MF "$(DEPDIR)/Voxel_BoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_BoolDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_BoolDS.Tpo" "$(DEPDIR)/Voxel_BoolDS.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_BoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx' object='Voxel_BoolDS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_BoolDS.Plo' tmpdepfile='$(DEPDIR)/Voxel_BoolDS.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_BoolDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BoolDS.cxx

Voxel_BooleanOperation.o: @top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_BooleanOperation.o -MD -MP -MF "$(DEPDIR)/Voxel_BooleanOperation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_BooleanOperation.o `test -f '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_BooleanOperation.Tpo" "$(DEPDIR)/Voxel_BooleanOperation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_BooleanOperation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx' object='Voxel_BooleanOperation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_BooleanOperation.Po' tmpdepfile='$(DEPDIR)/Voxel_BooleanOperation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_BooleanOperation.o `test -f '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx

Voxel_BooleanOperation.obj: @top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_BooleanOperation.obj -MD -MP -MF "$(DEPDIR)/Voxel_BooleanOperation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_BooleanOperation.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_BooleanOperation.Tpo" "$(DEPDIR)/Voxel_BooleanOperation.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_BooleanOperation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx' object='Voxel_BooleanOperation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_BooleanOperation.Po' tmpdepfile='$(DEPDIR)/Voxel_BooleanOperation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_BooleanOperation.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx'; fi`

Voxel_BooleanOperation.lo: @top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_BooleanOperation.lo -MD -MP -MF "$(DEPDIR)/Voxel_BooleanOperation.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_BooleanOperation.lo `test -f '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_BooleanOperation.Tpo" "$(DEPDIR)/Voxel_BooleanOperation.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_BooleanOperation.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx' object='Voxel_BooleanOperation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_BooleanOperation.Plo' tmpdepfile='$(DEPDIR)/Voxel_BooleanOperation.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_BooleanOperation.lo `test -f '@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_BooleanOperation.cxx

Voxel_CollisionDetection.o: @top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_CollisionDetection.o -MD -MP -MF "$(DEPDIR)/Voxel_CollisionDetection.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_CollisionDetection.o `test -f '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_CollisionDetection.Tpo" "$(DEPDIR)/Voxel_CollisionDetection.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_CollisionDetection.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx' object='Voxel_CollisionDetection.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_CollisionDetection.Po' tmpdepfile='$(DEPDIR)/Voxel_CollisionDetection.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_CollisionDetection.o `test -f '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx

Voxel_CollisionDetection.obj: @top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_CollisionDetection.obj -MD -MP -MF "$(DEPDIR)/Voxel_CollisionDetection.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_CollisionDetection.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_CollisionDetection.Tpo" "$(DEPDIR)/Voxel_CollisionDetection.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_CollisionDetection.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx' object='Voxel_CollisionDetection.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_CollisionDetection.Po' tmpdepfile='$(DEPDIR)/Voxel_CollisionDetection.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_CollisionDetection.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx'; fi`

Voxel_CollisionDetection.lo: @top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_CollisionDetection.lo -MD -MP -MF "$(DEPDIR)/Voxel_CollisionDetection.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_CollisionDetection.lo `test -f '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_CollisionDetection.Tpo" "$(DEPDIR)/Voxel_CollisionDetection.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_CollisionDetection.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx' object='Voxel_CollisionDetection.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_CollisionDetection.Plo' tmpdepfile='$(DEPDIR)/Voxel_CollisionDetection.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_CollisionDetection.lo `test -f '@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_CollisionDetection.cxx

Voxel_ColorDS.o: @top_srcdir@/src/Voxel/Voxel_ColorDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_ColorDS.o -MD -MP -MF "$(DEPDIR)/Voxel_ColorDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_ColorDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_ColorDS.Tpo" "$(DEPDIR)/Voxel_ColorDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_ColorDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx' object='Voxel_ColorDS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_ColorDS.Po' tmpdepfile='$(DEPDIR)/Voxel_ColorDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_ColorDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx

Voxel_ColorDS.obj: @top_srcdir@/src/Voxel/Voxel_ColorDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_ColorDS.obj -MD -MP -MF "$(DEPDIR)/Voxel_ColorDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_ColorDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_ColorDS.Tpo" "$(DEPDIR)/Voxel_ColorDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_ColorDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx' object='Voxel_ColorDS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_ColorDS.Po' tmpdepfile='$(DEPDIR)/Voxel_ColorDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_ColorDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx'; fi`

Voxel_ColorDS.lo: @top_srcdir@/src/Voxel/Voxel_ColorDS.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_ColorDS.lo -MD -MP -MF "$(DEPDIR)/Voxel_ColorDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_ColorDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_ColorDS.Tpo" "$(DEPDIR)/Voxel_ColorDS.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_ColorDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx' object='Voxel_ColorDS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_ColorDS.Plo' tmpdepfile='$(DEPDIR)/Voxel_ColorDS.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_ColorDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ColorDS.cxx

Voxel_DS.o: @top_srcdir@/src/Voxel/Voxel_DS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_DS.o -MD -MP -MF "$(DEPDIR)/Voxel_DS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_DS.o `test -f '@top_srcdir@/src/Voxel/Voxel_DS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_DS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_DS.Tpo" "$(DEPDIR)/Voxel_DS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_DS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_DS.cxx' object='Voxel_DS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_DS.Po' tmpdepfile='$(DEPDIR)/Voxel_DS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_DS.o `test -f '@top_srcdir@/src/Voxel/Voxel_DS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_DS.cxx

Voxel_DS.obj: @top_srcdir@/src/Voxel/Voxel_DS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_DS.obj -MD -MP -MF "$(DEPDIR)/Voxel_DS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_DS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_DS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_DS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_DS.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_DS.Tpo" "$(DEPDIR)/Voxel_DS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_DS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_DS.cxx' object='Voxel_DS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_DS.Po' tmpdepfile='$(DEPDIR)/Voxel_DS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_DS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_DS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_DS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_DS.cxx'; fi`

Voxel_DS.lo: @top_srcdir@/src/Voxel/Voxel_DS.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_DS.lo -MD -MP -MF "$(DEPDIR)/Voxel_DS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_DS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_DS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_DS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_DS.Tpo" "$(DEPDIR)/Voxel_DS.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_DS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_DS.cxx' object='Voxel_DS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_DS.Plo' tmpdepfile='$(DEPDIR)/Voxel_DS.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_DS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_DS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_DS.cxx

Voxel_FastConverter.o: @top_srcdir@/src/Voxel/Voxel_FastConverter.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_FastConverter.o -MD -MP -MF "$(DEPDIR)/Voxel_FastConverter.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_FastConverter.o `test -f '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_FastConverter.Tpo" "$(DEPDIR)/Voxel_FastConverter.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_FastConverter.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx' object='Voxel_FastConverter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_FastConverter.Po' tmpdepfile='$(DEPDIR)/Voxel_FastConverter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_FastConverter.o `test -f '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx

Voxel_FastConverter.obj: @top_srcdir@/src/Voxel/Voxel_FastConverter.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_FastConverter.obj -MD -MP -MF "$(DEPDIR)/Voxel_FastConverter.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_FastConverter.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_FastConverter.Tpo" "$(DEPDIR)/Voxel_FastConverter.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_FastConverter.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx' object='Voxel_FastConverter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_FastConverter.Po' tmpdepfile='$(DEPDIR)/Voxel_FastConverter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_FastConverter.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx'; fi`

Voxel_FastConverter.lo: @top_srcdir@/src/Voxel/Voxel_FastConverter.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_FastConverter.lo -MD -MP -MF "$(DEPDIR)/Voxel_FastConverter.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_FastConverter.lo `test -f '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_FastConverter.Tpo" "$(DEPDIR)/Voxel_FastConverter.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_FastConverter.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx' object='Voxel_FastConverter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_FastConverter.Plo' tmpdepfile='$(DEPDIR)/Voxel_FastConverter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_FastConverter.lo `test -f '@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FastConverter.cxx

Voxel_FloatDS.o: @top_srcdir@/src/Voxel/Voxel_FloatDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_FloatDS.o -MD -MP -MF "$(DEPDIR)/Voxel_FloatDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_FloatDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_FloatDS.Tpo" "$(DEPDIR)/Voxel_FloatDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_FloatDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx' object='Voxel_FloatDS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_FloatDS.Po' tmpdepfile='$(DEPDIR)/Voxel_FloatDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_FloatDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx

Voxel_FloatDS.obj: @top_srcdir@/src/Voxel/Voxel_FloatDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_FloatDS.obj -MD -MP -MF "$(DEPDIR)/Voxel_FloatDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_FloatDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_FloatDS.Tpo" "$(DEPDIR)/Voxel_FloatDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_FloatDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx' object='Voxel_FloatDS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_FloatDS.Po' tmpdepfile='$(DEPDIR)/Voxel_FloatDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_FloatDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx'; fi`

Voxel_FloatDS.lo: @top_srcdir@/src/Voxel/Voxel_FloatDS.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_FloatDS.lo -MD -MP -MF "$(DEPDIR)/Voxel_FloatDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_FloatDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_FloatDS.Tpo" "$(DEPDIR)/Voxel_FloatDS.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_FloatDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx' object='Voxel_FloatDS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_FloatDS.Plo' tmpdepfile='$(DEPDIR)/Voxel_FloatDS.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_FloatDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_FloatDS.cxx

Voxel_OctBoolDS.o: @top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_OctBoolDS.o -MD -MP -MF "$(DEPDIR)/Voxel_OctBoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_OctBoolDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_OctBoolDS.Tpo" "$(DEPDIR)/Voxel_OctBoolDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_OctBoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx' object='Voxel_OctBoolDS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_OctBoolDS.Po' tmpdepfile='$(DEPDIR)/Voxel_OctBoolDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_OctBoolDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx

Voxel_OctBoolDS.obj: @top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_OctBoolDS.obj -MD -MP -MF "$(DEPDIR)/Voxel_OctBoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_OctBoolDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_OctBoolDS.Tpo" "$(DEPDIR)/Voxel_OctBoolDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_OctBoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx' object='Voxel_OctBoolDS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_OctBoolDS.Po' tmpdepfile='$(DEPDIR)/Voxel_OctBoolDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_OctBoolDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx'; fi`

Voxel_OctBoolDS.lo: @top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_OctBoolDS.lo -MD -MP -MF "$(DEPDIR)/Voxel_OctBoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_OctBoolDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_OctBoolDS.Tpo" "$(DEPDIR)/Voxel_OctBoolDS.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_OctBoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx' object='Voxel_OctBoolDS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_OctBoolDS.Plo' tmpdepfile='$(DEPDIR)/Voxel_OctBoolDS.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_OctBoolDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_OctBoolDS.cxx

Voxel_Prs.o: @top_srcdir@/src/Voxel/Voxel_Prs.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Prs.o -MD -MP -MF "$(DEPDIR)/Voxel_Prs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Prs.o `test -f '@top_srcdir@/src/Voxel/Voxel_Prs.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Prs.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Prs.Tpo" "$(DEPDIR)/Voxel_Prs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Prs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Prs.cxx' object='Voxel_Prs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Prs.Po' tmpdepfile='$(DEPDIR)/Voxel_Prs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Prs.o `test -f '@top_srcdir@/src/Voxel/Voxel_Prs.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Prs.cxx

Voxel_Prs.obj: @top_srcdir@/src/Voxel/Voxel_Prs.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Prs.obj -MD -MP -MF "$(DEPDIR)/Voxel_Prs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Prs.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Prs.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Prs.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Prs.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Prs.Tpo" "$(DEPDIR)/Voxel_Prs.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Prs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Prs.cxx' object='Voxel_Prs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Prs.Po' tmpdepfile='$(DEPDIR)/Voxel_Prs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Prs.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Prs.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Prs.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Prs.cxx'; fi`

Voxel_Prs.lo: @top_srcdir@/src/Voxel/Voxel_Prs.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Prs.lo -MD -MP -MF "$(DEPDIR)/Voxel_Prs.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Prs.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Prs.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Prs.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Prs.Tpo" "$(DEPDIR)/Voxel_Prs.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Prs.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Prs.cxx' object='Voxel_Prs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Prs.Plo' tmpdepfile='$(DEPDIR)/Voxel_Prs.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Prs.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Prs.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Prs.cxx

Voxel_ROctBoolDS.o: @top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_ROctBoolDS.o -MD -MP -MF "$(DEPDIR)/Voxel_ROctBoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_ROctBoolDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_ROctBoolDS.Tpo" "$(DEPDIR)/Voxel_ROctBoolDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_ROctBoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx' object='Voxel_ROctBoolDS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_ROctBoolDS.Po' tmpdepfile='$(DEPDIR)/Voxel_ROctBoolDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_ROctBoolDS.o `test -f '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx

Voxel_ROctBoolDS.obj: @top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_ROctBoolDS.obj -MD -MP -MF "$(DEPDIR)/Voxel_ROctBoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_ROctBoolDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_ROctBoolDS.Tpo" "$(DEPDIR)/Voxel_ROctBoolDS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_ROctBoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx' object='Voxel_ROctBoolDS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_ROctBoolDS.Po' tmpdepfile='$(DEPDIR)/Voxel_ROctBoolDS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_ROctBoolDS.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx'; fi`

Voxel_ROctBoolDS.lo: @top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_ROctBoolDS.lo -MD -MP -MF "$(DEPDIR)/Voxel_ROctBoolDS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_ROctBoolDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_ROctBoolDS.Tpo" "$(DEPDIR)/Voxel_ROctBoolDS.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_ROctBoolDS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx' object='Voxel_ROctBoolDS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_ROctBoolDS.Plo' tmpdepfile='$(DEPDIR)/Voxel_ROctBoolDS.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_ROctBoolDS.lo `test -f '@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_ROctBoolDS.cxx

Voxel_Reader.o: @top_srcdir@/src/Voxel/Voxel_Reader.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Reader.o -MD -MP -MF "$(DEPDIR)/Voxel_Reader.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Reader.o `test -f '@top_srcdir@/src/Voxel/Voxel_Reader.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Reader.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Reader.Tpo" "$(DEPDIR)/Voxel_Reader.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Reader.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Reader.cxx' object='Voxel_Reader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Reader.Po' tmpdepfile='$(DEPDIR)/Voxel_Reader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Reader.o `test -f '@top_srcdir@/src/Voxel/Voxel_Reader.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Reader.cxx

Voxel_Reader.obj: @top_srcdir@/src/Voxel/Voxel_Reader.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Reader.obj -MD -MP -MF "$(DEPDIR)/Voxel_Reader.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Reader.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Reader.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Reader.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Reader.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Reader.Tpo" "$(DEPDIR)/Voxel_Reader.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Reader.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Reader.cxx' object='Voxel_Reader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Reader.Po' tmpdepfile='$(DEPDIR)/Voxel_Reader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Reader.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Reader.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Reader.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Reader.cxx'; fi`

Voxel_Reader.lo: @top_srcdir@/src/Voxel/Voxel_Reader.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Reader.lo -MD -MP -MF "$(DEPDIR)/Voxel_Reader.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Reader.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Reader.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Reader.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Reader.Tpo" "$(DEPDIR)/Voxel_Reader.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Reader.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Reader.cxx' object='Voxel_Reader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Reader.Plo' tmpdepfile='$(DEPDIR)/Voxel_Reader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Reader.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Reader.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Reader.cxx

Voxel_Selector.o: @top_srcdir@/src/Voxel/Voxel_Selector.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Selector.o -MD -MP -MF "$(DEPDIR)/Voxel_Selector.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Selector.o `test -f '@top_srcdir@/src/Voxel/Voxel_Selector.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Selector.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Selector.Tpo" "$(DEPDIR)/Voxel_Selector.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Selector.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Selector.cxx' object='Voxel_Selector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Selector.Po' tmpdepfile='$(DEPDIR)/Voxel_Selector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Selector.o `test -f '@top_srcdir@/src/Voxel/Voxel_Selector.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Selector.cxx

Voxel_Selector.obj: @top_srcdir@/src/Voxel/Voxel_Selector.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Selector.obj -MD -MP -MF "$(DEPDIR)/Voxel_Selector.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Selector.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Selector.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Selector.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Selector.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Selector.Tpo" "$(DEPDIR)/Voxel_Selector.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Selector.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Selector.cxx' object='Voxel_Selector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Selector.Po' tmpdepfile='$(DEPDIR)/Voxel_Selector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Selector.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Selector.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Selector.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Selector.cxx'; fi`

Voxel_Selector.lo: @top_srcdir@/src/Voxel/Voxel_Selector.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Selector.lo -MD -MP -MF "$(DEPDIR)/Voxel_Selector.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Selector.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Selector.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Selector.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Selector.Tpo" "$(DEPDIR)/Voxel_Selector.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Selector.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Selector.cxx' object='Voxel_Selector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Selector.Plo' tmpdepfile='$(DEPDIR)/Voxel_Selector.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Selector.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Selector.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Selector.cxx

Voxel_SplitData.o: @top_srcdir@/src/Voxel/Voxel_SplitData.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_SplitData.o -MD -MP -MF "$(DEPDIR)/Voxel_SplitData.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_SplitData.o `test -f '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_SplitData.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_SplitData.Tpo" "$(DEPDIR)/Voxel_SplitData.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_SplitData.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_SplitData.cxx' object='Voxel_SplitData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_SplitData.Po' tmpdepfile='$(DEPDIR)/Voxel_SplitData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_SplitData.o `test -f '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_SplitData.cxx

Voxel_SplitData.obj: @top_srcdir@/src/Voxel/Voxel_SplitData.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_SplitData.obj -MD -MP -MF "$(DEPDIR)/Voxel_SplitData.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_SplitData.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_SplitData.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_SplitData.Tpo" "$(DEPDIR)/Voxel_SplitData.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_SplitData.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_SplitData.cxx' object='Voxel_SplitData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_SplitData.Po' tmpdepfile='$(DEPDIR)/Voxel_SplitData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_SplitData.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_SplitData.cxx'; fi`

Voxel_SplitData.lo: @top_srcdir@/src/Voxel/Voxel_SplitData.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_SplitData.lo -MD -MP -MF "$(DEPDIR)/Voxel_SplitData.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_SplitData.lo `test -f '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_SplitData.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_SplitData.Tpo" "$(DEPDIR)/Voxel_SplitData.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_SplitData.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_SplitData.cxx' object='Voxel_SplitData.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_SplitData.Plo' tmpdepfile='$(DEPDIR)/Voxel_SplitData.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_SplitData.lo `test -f '@top_srcdir@/src/Voxel/Voxel_SplitData.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_SplitData.cxx

Voxel_Writer.o: @top_srcdir@/src/Voxel/Voxel_Writer.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Writer.o -MD -MP -MF "$(DEPDIR)/Voxel_Writer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Writer.o `test -f '@top_srcdir@/src/Voxel/Voxel_Writer.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Writer.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Writer.Tpo" "$(DEPDIR)/Voxel_Writer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Writer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Writer.cxx' object='Voxel_Writer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Writer.Po' tmpdepfile='$(DEPDIR)/Voxel_Writer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Writer.o `test -f '@top_srcdir@/src/Voxel/Voxel_Writer.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Writer.cxx

Voxel_Writer.obj: @top_srcdir@/src/Voxel/Voxel_Writer.cxx
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Writer.obj -MD -MP -MF "$(DEPDIR)/Voxel_Writer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Writer.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Writer.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Writer.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Writer.cxx'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Writer.Tpo" "$(DEPDIR)/Voxel_Writer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Writer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Writer.cxx' object='Voxel_Writer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Writer.Po' tmpdepfile='$(DEPDIR)/Voxel_Writer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Writer.obj `if test -f '@top_srcdir@/src/Voxel/Voxel_Writer.cxx'; then $(CYGPATH_W) '@top_srcdir@/src/Voxel/Voxel_Writer.cxx'; else $(CYGPATH_W) '$(srcdir)/@top_srcdir@/src/Voxel/Voxel_Writer.cxx'; fi`

Voxel_Writer.lo: @top_srcdir@/src/Voxel/Voxel_Writer.cxx
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Voxel_Writer.lo -MD -MP -MF "$(DEPDIR)/Voxel_Writer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Voxel_Writer.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Writer.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Writer.cxx; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Voxel_Writer.Tpo" "$(DEPDIR)/Voxel_Writer.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Voxel_Writer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='@top_srcdir@/src/Voxel/Voxel_Writer.cxx' object='Voxel_Writer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Voxel_Writer.Plo' tmpdepfile='$(DEPDIR)/Voxel_Writer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Voxel_Writer.lo `test -f '@top_srcdir@/src/Voxel/Voxel_Writer.cxx' || echo '$(srcdir)/'`@top_srcdir@/src/Voxel/Voxel_Writer.cxx

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
