// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Xw_PixMap_HeaderFile
#define _Xw_PixMap_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_Xw_PixMap_HeaderFile
#include <Handle_Xw_PixMap.hxx>
#endif

#ifndef _Aspect_Handle_HeaderFile
#include <Aspect_Handle.hxx>
#endif
#ifndef _Handle_Xw_Window_HeaderFile
#include <Handle_Xw_Window.hxx>
#endif
#ifndef _Aspect_PixMap_HeaderFile
#include <Aspect_PixMap.hxx>
#endif
#ifndef _Handle_Aspect_Window_HeaderFile
#include <Handle_Aspect_Window.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class Xw_Window;
class Aspect_PixmapDefinitionError;
class Aspect_PixmapError;
class Aspect_Window;
class Quantity_Color;


//! This class defines a X11 pixmap <br>
class Xw_PixMap : public Aspect_PixMap {

public:

  //!  Warning! When <aDepth> is NULL , the pixmap is created <br>
//! with the SAME depth than the window <aWindow> <br>
  Standard_EXPORT   Xw_PixMap(const Handle(Aspect_Window)& aWindow,const Standard_Integer aWidth,const Standard_Integer anHeight,const Standard_Integer aDepth = 0);
  //! Destroies the Pixmap <br>
//!  Trigger: Raises if Pixmap is not defined properly <br>
  Standard_EXPORT   virtual  void Destroy() ;
  
//! Dumps the Bitmap to an image file with <br>
//! an optional gamma correction value <br>
//! and returns TRUE if the dump occurs normaly. <br>
  Standard_EXPORT   virtual  Standard_Boolean Dump(const Standard_CString aFilename,const Standard_Real aGammaValue = 1.0) const;
  
//! Returns the pixel color. <br>
  Standard_EXPORT   virtual  Quantity_Color PixelColor(const Standard_Integer theX,const Standard_Integer theY) const;
  //! Returns the ID of the just created pixmap <br>
  Standard_EXPORT   virtual  Aspect_Handle PixmapID() const;




  DEFINE_STANDARD_RTTI(Xw_PixMap)

protected:


Aspect_Handle myPixmap;


private: 

  
  Standard_EXPORT     Standard_Integer PreferedDepth(const Handle(Aspect_Window)& aWindow,const Standard_Integer aDepth) const;

Handle_Xw_Window myWindow;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
