//#include <Transfer_Mapper.ixx>
#include <Standard_Integer.hxx>


    Transfer_Mapper::Transfer_Mapper (const TheKey& akey)
    : theval (akey)
{ SetHashCode ( TheHasher::HashCode (akey, IntegerLast() ) ); }


    const TheKey&  Transfer_Mapper::Value () const
      {  return theval;  }

    Standard_Boolean  Transfer_Mapper::Equates
  (const Handle(Transfer_Finder)& other) const
{
  if (other.IsNull()) return Standard_False;
  if (GetHashCode() != other->GetHashCode()) return Standard_False;
  if (other->DynamicType() != DynamicType()) return Standard_False;
  Handle(Transfer_Mapper) another = Handle(Transfer_Mapper)::DownCast(other);
//  return (theval == another->Value());
  return  TheHasher::IsEqual (theval,another->Value());
}

    Handle(Standard_Type)  Transfer_Mapper::ValueType () const
      {  return TheInfo::Type(theval);  }

    Standard_CString  Transfer_Mapper::ValueTypeName () const
      {  return TheInfo::TypeName(theval);  }
