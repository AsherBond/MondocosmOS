// File math_FunctionAllRoots.lxx

#include <StdFail_NotDone.hxx>
#include <TColStd_SequenceOfReal.hxx>
#include <TColStd_SequenceOfInteger.hxx>

inline Standard_Boolean math_FunctionAllRoots::IsDone() const { return done; }

inline Standard_OStream& operator<<(Standard_OStream& o, 
				    const math_FunctionAllRoots& F)
{
  F.Dump(o);
  return o;
}


inline Standard_Integer math_FunctionAllRoots::NbIntervals () const {
  StdFail_NotDone_Raise_if(!done, " ");
  return pdeb.Length();
}

inline void math_FunctionAllRoots::GetInterval (const Standard_Integer Index,
					 Standard_Real& A, 
					 Standard_Real& B) const {
  StdFail_NotDone_Raise_if(!done, " ");
  A=pdeb.Value(Index);
  B=pfin.Value(Index);
}

inline void math_FunctionAllRoots::GetIntervalState (const Standard_Integer Index,
					      Standard_Integer& IFirst,
					      Standard_Integer& ILast) const {
  StdFail_NotDone_Raise_if(!done, " ");
  IFirst=ideb.Value(Index);
  ILast=ifin.Value(Index);
}

inline Standard_Integer math_FunctionAllRoots::NbPoints () const {
  StdFail_NotDone_Raise_if(!done, " ");
  return piso.Length();
}

inline Standard_Real math_FunctionAllRoots::GetPoint (const Standard_Integer Index) const {
  StdFail_NotDone_Raise_if(!done, " ");
  return piso.Value(Index);
}


inline Standard_Integer math_FunctionAllRoots::GetPointState (const Standard_Integer Index) const {
  StdFail_NotDone_Raise_if(!done, " ");
  return iiso.Value(Index);
}

