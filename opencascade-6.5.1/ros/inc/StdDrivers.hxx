// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StdDrivers_HeaderFile
#define _StdDrivers_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_Standard_Transient_HeaderFile
#include <Handle_Standard_Transient.hxx>
#endif
class Standard_Transient;
class Standard_GUID;
class StdDrivers_DocumentRetrievalDriver;
class StdDrivers_DocumentStorageDriver;



class StdDrivers  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  //! Depending from the  ID, returns a list of  storage <br>
//!          or retrieval attribute drivers. Used for plugin <br>
  Standard_EXPORT   static  Handle_Standard_Transient Factory(const Standard_GUID& aGUID) ;





protected:





private:




friend class StdDrivers_DocumentRetrievalDriver;
friend class StdDrivers_DocumentStorageDriver;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
