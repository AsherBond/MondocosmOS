#ifndef IntPatch_Polygo_HeaderFile
#include <IntPatch_Polygo.hxx>
#endif
#ifndef Bnd_Box2d_HeaderFile
#include <Bnd_Box2d.hxx>
#endif
#ifndef gp_Pnt2d_HeaderFile
#include <gp_Pnt2d.hxx>
#endif

inline const Bnd_Box2d& IntPatch_PolygoTool::Bounding(const IntPatch_Polygo& Line)
{ return Line.Bounding(); }


inline Standard_Real IntPatch_PolygoTool::DeflectionOverEstimation
  (const IntPatch_Polygo& Line) 
{ return Line.Error();} // fleche non calculable

inline Standard_Boolean IntPatch_PolygoTool::Closed(const IntPatch_Polygo& Line) 
{ return Line.Closed();}

inline Standard_Integer IntPatch_PolygoTool::NbSegments(const IntPatch_Polygo& Line) 
{ return Line.NbPoints()-1;}

inline gp_Pnt2d IntPatch_PolygoTool::BeginOfSeg(const IntPatch_Polygo& Line,
					 const Standard_Integer Index) 
{ return Line.Point(Index);}


inline gp_Pnt2d IntPatch_PolygoTool::EndOfSeg(const IntPatch_Polygo& Line,
				       const Standard_Integer Index) 
{ return Line.Point(Index+1);}


