// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BOPTools_PaveSet_HeaderFile
#define _BOPTools_PaveSet_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _BOPTools_ListOfPave_HeaderFile
#include <BOPTools_ListOfPave.hxx>
#endif
class BOPTools_ListOfPave;
class BOPTools_Pave;



//! class for storing/sorting paves that <br>
//! belong to an edge <br>
class BOPTools_PaveSet  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
//! Empty constructor <br>
  Standard_EXPORT   BOPTools_PaveSet();
  
//! Access to the  list <br>
  Standard_EXPORT     BOPTools_ListOfPave& ChangeSet() ;
  
//! Access to the  list const <br>
  Standard_EXPORT    const BOPTools_ListOfPave& Set() const;
  
//! Appends <aPave>  to the  list <br>
  Standard_EXPORT     void Append(const BOPTools_Pave& aPave) ;
  
//! Sorts  list in increasing order of paves' parameters <br>
  Standard_EXPORT     void SortSet() ;





protected:





private:



BOPTools_ListOfPave myPaveList;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
