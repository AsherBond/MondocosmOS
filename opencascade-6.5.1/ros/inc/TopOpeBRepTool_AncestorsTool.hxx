// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TopOpeBRepTool_AncestorsTool_HeaderFile
#define _TopOpeBRepTool_AncestorsTool_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TopAbs_ShapeEnum_HeaderFile
#include <TopAbs_ShapeEnum.hxx>
#endif
class TopoDS_Shape;
class TopTools_IndexedDataMapOfShapeListOfShape;


//! Describes the ancestors tool needed by <br>
//!          the class DSFiller from TopOpeInter. <br>
//! <br>
//! This class has been created because it is not possible <br>
//! to instantiate the argument TheAncestorsTool (of <br>
//! DSFiller from TopOpeInter) with a  package (TopExp) <br>
//! giving services as package methods. <br>
class TopOpeBRepTool_AncestorsTool  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  //! same as package method TopExp::MapShapeListOfShapes() <br>
  Standard_EXPORT   static  void MakeAncestors(const TopoDS_Shape& S,const TopAbs_ShapeEnum TS,const TopAbs_ShapeEnum TA,TopTools_IndexedDataMapOfShapeListOfShape& M) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
