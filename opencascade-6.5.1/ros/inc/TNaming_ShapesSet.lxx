// File:	TNaming_ShapesSet.lxx
// Created:	Thu Jan  9 08:39:26 1997
// Author:	Yves FRICAUD
//		<yfr@claquox.paris1.matra-dtv.fr>

#include <TopTools_MapOfShape.hxx>

//=======================================================================
//function : TNaming_ShapesSet
//purpose  : 
//=======================================================================

inline TNaming_ShapesSet::TNaming_ShapesSet()
{
}


//=======================================================================
//function : Clear
//purpose  : 
//=======================================================================

inline void TNaming_ShapesSet::Clear() 
{
  myMap.Clear();
}

//=======================================================================
//function : Add
//purpose  : 
//=======================================================================

inline Standard_Boolean TNaming_ShapesSet::Add(const TopoDS_Shape& S) 
{
  return myMap.Add(S);
}

//=======================================================================
//function : Standard_Boolean
//purpose  : 
//=======================================================================

inline Standard_Boolean TNaming_ShapesSet::Contains(const TopoDS_Shape& S) const
{
  return myMap.Contains(S);
}

//=======================================================================
//function : Standard_Boolean
//purpose  : 
//=======================================================================

inline Standard_Boolean TNaming_ShapesSet::Remove(const TopoDS_Shape& S) 
{
  return myMap.Remove(S);
}

//=======================================================================
//function : IsEmpty
//purpose  : 
//=======================================================================

inline   Standard_Boolean TNaming_ShapesSet::IsEmpty() const
{
  return myMap.IsEmpty();
}

//=======================================================================
//function : NbShapes
//purpose  : 
//=======================================================================

inline Standard_Integer TNaming_ShapesSet::NbShapes() const
{
  return myMap.Extent();
}


//=======================================================================
//function : ChangeMap
//purpose  : 
//=======================================================================

inline TopTools_MapOfShape& TNaming_ShapesSet::ChangeMap()
{
  return myMap;
}

//=======================================================================
//function : Map
//purpose  : 
//=======================================================================

inline const TopTools_MapOfShape& TNaming_ShapesSet::Map() const
{
  return myMap;
}
