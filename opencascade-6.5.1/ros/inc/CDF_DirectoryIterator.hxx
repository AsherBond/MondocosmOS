// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _CDF_DirectoryIterator_HeaderFile
#define _CDF_DirectoryIterator_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _CDM_ListIteratorOfListOfDocument_HeaderFile
#include <CDM_ListIteratorOfListOfDocument.hxx>
#endif
#ifndef _Handle_CDF_Directory_HeaderFile
#include <Handle_CDF_Directory.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_CDM_Document_HeaderFile
#include <Handle_CDM_Document.hxx>
#endif
class Standard_NoSuchObject;
class CDF_Directory;
class CDM_Document;



class CDF_DirectoryIterator  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  //! creates an Iterator with the directory <br>
//!          of the current CDF. <br>
  Standard_EXPORT   CDF_DirectoryIterator();
  
  Standard_EXPORT   CDF_DirectoryIterator(const Handle(CDF_Directory)& aDirectory);
  //! Returns True if there are more entries to return <br>
  Standard_EXPORT     Standard_Boolean MoreDocument() ;
  //! Go to the next entry <br>
//!           (if there is not, Value will raise an exception) <br>
  Standard_EXPORT     void NextDocument() ;
  //! Returns item value of current entry <br>
  Standard_EXPORT     Handle_CDM_Document Document() ;





protected:





private:



CDM_ListIteratorOfListOfDocument myIterator;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
