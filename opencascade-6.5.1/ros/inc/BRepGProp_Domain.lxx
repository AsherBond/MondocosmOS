// File:	BRepGProp_Domain.lxx
// Created:	Tue Dec 13 08:57:55 2005
// Author:	Sergey KHROMOV
//		<skv@dimox>


#include <TopoDS.hxx>
#include <TopoDS_Face.hxx>

//=======================================================================
//function : BRepGProp_Domain
//purpose  : Empty constructor.
//=======================================================================

inline BRepGProp_Domain::BRepGProp_Domain ()
{
}

//=======================================================================
//function : BRepGProp_Domain
//purpose  : Constructor. Initializes the domain with the face.
//=======================================================================

inline BRepGProp_Domain::BRepGProp_Domain (const TopoDS_Face& F) :
       myExplorer(F.Oriented(TopAbs_FORWARD),TopAbs_EDGE)
{
}

//=======================================================================
//function : Init
//purpose  : Initializes the domain with the face.
//=======================================================================

inline void BRepGProp_Domain::Init(const TopoDS_Face& F)
{
  myExplorer.Init(F.Oriented(TopAbs_FORWARD),TopAbs_EDGE);
}

//=======================================================================
//function : More
//purpose  : Returns True if there is another arc of curve in the list.
//=======================================================================

inline Standard_Boolean BRepGProp_Domain::More ()
{
  return myExplorer.More();
}

//=======================================================================
//function : Init
//purpose  : Initializes the exploration with the face already set.
//=======================================================================

inline void BRepGProp_Domain::Init ()
{
  myExplorer.ReInit();
}

//=======================================================================
//function : Value
//purpose  : Returns the current edge.
//=======================================================================

inline const TopoDS_Edge& BRepGProp_Domain::Value () 
{
  return TopoDS::Edge(myExplorer.Current());
}
