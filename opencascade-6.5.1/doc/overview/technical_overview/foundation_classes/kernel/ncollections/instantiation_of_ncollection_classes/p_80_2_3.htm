<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>p_80_2_3</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../../../../../html_ns_ns_nc_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../../../../../html_ns_ns_nc.css'>");}
//-->
</script>
<script LANGUAGE="JavaScript" TITLE="BSSC Special Effects" src="../../../../../ehlpdhtm.js" name="EHELP_DHTM"></script>

<style type="text/css">
<!--
p.whs1 { margin-top:0; margin-bottom:0; }
p.whs2 { margin-left:0px; }
-->
</style><script type="text/javascript" language="JavaScript">
<!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))
{
  var strNSS = "<style type='text/css'>";
  strNSS += "p.whs1 {margin-top:1pt;margin-bottom:1pt; }";
  strNSS += "p.whs2 {margin-left:1pt; }";
  strNSS +="</style>";
  document.write(strNSS);
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../../../../../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../../../../../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../../../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../../../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../../../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.setRelStartPage)
	{
	addTocInfo("Technical Overview\nFoundation Classes\nKernel\nNCollections\nInstantiation of NCollection classes\nClass architecture (public API)");
addAvenueInfo("Kernel","technical_overview/foundation_classes/kernel/ncollections/instantiation_of_ncollection_classes/p_80_2_2.htm","technical_overview/foundation_classes/kernel/ncollections/new_features/p_80_3_1.htm");
addButton("show",BTN_IMG,"Show","","","","",0,0,"../../../../../whd_show0.gif","../../../../../whd_show2.gif","../../../../../whd_show1.gif");
addButton("hide",BTN_IMG,"Hide","","","","",0,0,"../../../../../whd_hide0.gif","../../../../../whd_hide2.gif","../../../../../whd_hide1.gif");
addButton("prev",BTN_IMG,"<<","","","","",0,0,"../../../../../whd_prev0.gif","../../../../../whd_prev2.gif","../../../../../whd_prev1.gif");
addButton("next",BTN_IMG,">>","","","","",0,0,"../../../../../whd_next0.gif","../../../../../whd_next2.gif","../../../../../whd_next1.gif");

	}


	if (window.setRelStartPage)
	{
	setRelStartPage("../../../../../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
</script>
<p class=ReleaseNotes-1>Class architecture (public API)</p>

<p class="whs1">&nbsp;</p>

<h2>Architecture</h2>

<p>To understand the basic architecture of the classes instantiated from 
 <font style="font-style: italic;">NCollection </font>macros, please refer 
 to the documentation on <font style="font-style: italic;">TCollection 
 </font>package, particularly to CDL files. Almost all API described there 
 is preserved in <font style="font-style: italic;">NCollection.</font> 
 Changes are described in corresponding <font style="font-style: italic;">NCollection_Define*.hxx 
 </font>files. </p>

<p>Nevertheless the internal structure of <font style="font-style: italic;">NCollection 
 </font>classes is more complex than that of <font style="font-style: italic;">TCollection 
 </font>ones, providing more capabilities. The advanced layer of architecture 
 is described in the next chapter <font style="font-style: italic;">Features</font>.</p>

<p>There are two principal changes:</p>

<ul>
	
	<li style="font-size: 10pt;"
		class=kadov-p><p>In <font style="font-style: italic;">TCollection 
 </font>some classes ( <font style="font-style: italic;">Stack, List, Set, 
 Map, DataMap, DoubleMap </font>) define the <font style="font-style: italic;">Iterator 
 </font>type, the name of <font style="font-style: italic;">Iterator </font>being 
 like <font style="font-family: 'Lucida Console';"
			face="Lucida Console">MyPackage_DoubleMapIteratorOfDoubleMapOfIntegerReal. 
 </font></p></li>
</ul>

<p class="whs2">In <font style="font-style: italic;">NCollection 
 </font>each <font style="font-style: italic;">Iterator </font>is always 
 defined as subtype of the collection <font style="font-family: 'Lucida Console';"
											face="Lucida Console">(MyPackage_DoubleMapOfIntegerReal::Iterator 
 ). </font></p>

<ul>
	
	<li style="font-size: 10pt;"
		class=kadov-p><p>Hashed collections (of type <font style="font-style: italic;">Map* 
 </font>) require in <font style="font-style: italic;">TCollection </font>that 
 the special class <font style="font-style: italic;">Map*Hasher </font>is 
 defined. In <font style="font-style: italic;">NCollection </font>it is 
 only required that the global functions <font style="font-style: italic;">IsEqual 
 </font>and <font style="font-style: italic;">HashCode </font>are defined. 
 </p></li>
</ul>

<h2>Interface to classes defined in CDL</h2>

<p>The classes defined above can be used as types for fields, parameters 
 of methods and return values in CDL definitions. In our example, if <font 
 style="font-style: italic;">MyPackage </font>is a CDL package, you will 
 need to create the file <font style="font-style: italic;">MyPackage_SequenceOfPnt.hxx 
 </font>containing or including the above definitions, and then to add 
 the line: imported SequenceOfPnt to file <font style="font-style: italic;">MyPackage.cdl</font>; 
 </p>

<p>Then the new collection type can be used in any CDL definition under 
 the name: </p>

<p class=code>SequenceOfPnt from MyPackage</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>
</html>
