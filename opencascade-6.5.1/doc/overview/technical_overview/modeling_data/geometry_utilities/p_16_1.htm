<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Overview</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../../../html_ns_ns_nc_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../../../html_ns_ns_nc.css'>");}
//-->
</script>
<script LANGUAGE="JavaScript" TITLE="BSSC Special Effects" src="../../../ehlpdhtm.js" name="EHELP_DHTM"></script>

<style type="text/css">
<!--
p.whs1 { margin-left:4.50pt; margin-top:4.50pt; }
p.whs2 { margin-left:14.50pt; margin-top:4.50pt; text-indent:-9.50pt; }
-->
</style><script type="text/javascript" language="JavaScript">
<!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))
{
  var strNSS = "<style type='text/css'>";
  strNSS += "p.whs2 {text-indent:1pt; }";
  strNSS +="</style>";
  document.write(strNSS);
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../../../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../../../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../../../whtopic.js"></script>
<script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.setRelStartPage)
	{
	addTocInfo("Technical Overview\nModeling Data\nGeometry Utilities\nConversion to and from BSplines");
addAvenueInfo("Geometry Utilities","technical_overview/modeling_data/geometry_utilities/p_15_1.htm","technical_overview/modeling_data/geometry_utilities/p_17_1.htm");
addButton("show",BTN_IMG,"Show","","","","",0,0,"../../../whd_show0.gif","../../../whd_show2.gif","../../../whd_show1.gif");
addButton("hide",BTN_IMG,"Hide","","","","",0,0,"../../../whd_hide0.gif","../../../whd_hide2.gif","../../../whd_hide1.gif");
addButton("prev",BTN_IMG,"<<","","","","",0,0,"../../../whd_prev0.gif","../../../whd_prev2.gif","../../../whd_prev1.gif");
addButton("next",BTN_IMG,">>","","","","",0,0,"../../../whd_next0.gif","../../../whd_next2.gif","../../../whd_next1.gif");

	}


	if (window.setRelStartPage)
	{
	setRelStartPage("../../../index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}

}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(4);
//-->
</script>
<p class=ReleaseNotes-1>Conversion to and from BSplines</p>

<p class="whs1">&nbsp;</p>

<p class="whs1">The <font style="font-weight: bold;">Conversion 
 to and from BSplines</font> component has the following two distinct purposes:</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>Firstly, 
 it provides a homogenous formulation which can be used to describe any 
 curve or surface. This is useful for writing algorithms for a single data 
 structure model. The BSpline formulation can be used to represent most 
 basic geometric objects provided by the components which describe geometric 
 data structures (&quot;Fundamental Geometry Types&quot;, &quot;2D Geometry 
 Types&quot; and &quot;3D Geometry Types&quot; components).</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>Secondly, 
 it can be used to divide a BSpline curve or surface into a series of curves 
 or surfaces, thereby providing a higher degree of continuity. This is 
 useful for writing algorithms which require a specific degree of continuity 
 in the objects to which they are applied. Discontinuities are situated 
 on the boundaries of objects only.</p>

<p class="whs2">&nbsp;</p>

<p class="whs1">The &quot;Conversion 
 to and from BSplines&quot; component is composed of three packages.</p>

<p class="whs1">The <font style="font-weight: bold;">Convert</font> 
 package provides algorithms to convert the following into a BSpline curve 
 or surface:</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 bounded curve based on an elementary 2D curve (line, circle or conic) 
 from the <font style="font-weight: bold;">gp</font> package,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 bounded surface based on an elementary surface (cylinder, cone, sphere 
 or torus) from the <font style="font-weight: bold;">gp</font> package,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 series of adjacent 2D or 3D Bezier curves defined by their poles.</p>

<p class="whs2">&nbsp;</p>

<p class="whs1">These algorithms compute 
 the data needed to define the resulting BSpline curve or surface. This 
 elementary data (degrees, periodic characteristics, poles and weights, 
 knots and multiplicities) may then be used directly in an algorithm, or 
 can be used to construct the curve or the surface by calling the appropriate 
 constructor provided by the classes <font style="font-weight: bold;">Geom2d_BSplineCurve</font>, 
 <font style="font-weight: bold;">Geom_BSplineCurve</font> or <font style="font-weight: bold;">Geom_BSplineSurface</font>.</p>

<p class="whs1">The <font style="font-weight: bold;">Geom2dConvert</font> 
 package provides the following:</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 global function which is used to construct a BSpline curve from a bounded 
 curve based on a 2D curve from the <font style="font-weight: bold;">Geom2d</font> 
 package,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 splitting algorithm which computes the points at which a 2D BSpline curve 
 should be cut in order to obtain arcs with the same degree of continuity,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>global 
 functions used to construct the BSpline curves created by this splitting 
 algorithm, or by other types of segmentation of the BSpline curve,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>an 
 algorithm which converts a 2D BSpline curve into a series of adjacent 
 Bezier curves.</p>

<p class="whs2">&nbsp;</p>

<p class="whs1">The <font style="font-weight: bold;">GeomConvert</font> 
 package also provides the following:</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 global function used to construct a BSpline curve from a bounded curve 
 based on a curve from the <font style="font-weight: bold;">Geom</font> 
 package,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 splitting algorithm which computes the points at which a BSpline curve 
 should be cut in order to obtain arcs with the same degree of continuity,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>global 
 functions to construct BSpline curves created by this splitting algorithm, 
 or by other types of BSpline curve segmentation,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>an 
 algorithm which converts a BSpline curve into a series of adjacent Bezier 
 curves,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 global function to construct a BSpline surface from a bounded surface 
 based on a surface from the <font style="font-weight: bold;">Geom</font> 
 package,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>a 
 splitting algorithm which determines the curves along which a BSpline 
 surface should be cut in order to obtain patches with the same degree 
 of continuity,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>global 
 functions to construct BSpline surfaces created by this splitting algorithm, 
 or by other types of BSpline surface segmentation,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>an 
 algorithm which converts a BSpline surface into a series of adjacent Bezier 
 surfaces,</p>

<p class="whs2">-<span style="font-size: 8pt; font-family='Times: New Roman;"><font size=1 style="font-size:8pt;">&nbsp;&nbsp;&nbsp;</font></span>an 
 algorithm which converts a grid of adjacent Bezier surfaces into a BSpline 
 surface.</p>

<p class="whs1">&nbsp;</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
</body>
</html>
