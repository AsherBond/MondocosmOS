-- File:	CPPExt_Template.edl
-- Author:	Kernel (CLE)
-- History:	Tue Sep 19 17:25:59 1995	Kernel	Creation
-- Copyright:	Matra Datavision 1995
-- Purpose:     C++ extractor

-- ====================================
-- for extraction of a transient handle
-- ====================================

@template HandleTransient (%HTName,%HTInherits) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _Handle_%HTName_HeaderFile
$#define _Handle_%HTName_HeaderFile
$
$#ifndef _Standard_HeaderFile
$#include <Standard.hxx>
$#endif
$#ifndef _Standard_DefineHandle_HeaderFile
$#include <Standard_DefineHandle.hxx>
$#endif
$
$#ifndef _Handle_%HTInherits_HeaderFile
$#include <Handle_%HTInherits.hxx>
$#endif
$
$class Standard_Transient;
$class Handle(Standard_Type);
$class Handle(%HTInherits);
$class %HTName;
$
$DEFINE_STANDARD_HANDLE(%HTName,%HTInherits)
$
$#endif
@end;


-- ===============================
-- extraction of a transient class
-- ===============================

@template TransientInstClass (%ClassComment,
                              %Class,
                              %TICIncludes,
                              %Inherits,
                              %TICPublicmets,
                              %TICPublicfriends,
                              %TICProtectedmets,
                              %TICProtectedfields,
                              %TICPrivatemets,
                              %TICPrivatefields,
                              %TICPrivatefriends,
                              %TICDefines,
                              %TICInlineIncludes,
                              %TICUndefines,
                              %TICSuppMethod) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _%Class_HeaderFile
$#define _%Class_HeaderFile
$
$#ifndef _Standard_HeaderFile
$#include <Standard.hxx>
$#endif
$#ifndef _Standard_DefineHandle_HeaderFile
$#include <Standard_DefineHandle.hxx>
$#endif
$#ifndef _Handle_%Class_HeaderFile
$#include <Handle_%Class.hxx>
$#endif
$
$%TICIncludes
$
$%ClassComment
$class %Class : public %Inherits {
$
$public:
$
$%TICPublicmets
$%TICPublicfriends
$
$  DEFINE_STANDARD_RTTI(%Class)
$
$protected:
$
$%TICProtectedmets
$%TICProtectedfields
$
$private: 
$
$%TICPrivatemets
$%TICPrivatefields
$%TICPrivatefriends
$};
$
$%TICDefines
$%TICInlineIncludes
$%TICUndefines
$
$// other Inline functions and methods (like "C++: function call" methods)
$%TICSuppMethod
$
$#endif
@end;

@template TransientIxx (%Class,%Suffix,%Supplement,%TypeMgt,%Methods) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#include <%Class.%Suffix>
$
$#ifndef _Standard_Type_HeaderFile
$#include <Standard_Type.hxx>
$#endif
$
$%Supplement 
$
$%TypeMgt
$
$%Methods
@end;

-- ================================
-- extraction of a normal c++ class
-- ================================

@template MPVClass (%ClassComment,
                    %Class,
                    %TICIncludes,
                    %Inherits,
                    %TICPublicmets,
                    %TICPublicfriends,
                    %TICProtectedmets,
                    %TICProtectedfields,
                    %TICPrivatemets,
                    %TICPrivatefields,
                    %TICPrivatefriends,
                    %TICDefines,
                    %TICInlineIncludes,
                    %TICUndefines,
                    %TICSuppMethod) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _%Class_HeaderFile
$#define _%Class_HeaderFile
$
$#ifndef _Standard_HeaderFile
$#include <Standard.hxx>
$#endif
$#ifndef _Standard_Macro_HeaderFile
$#include <Standard_Macro.hxx>
$#endif
$
$%TICIncludes
$
$%ClassComment
$class %Class %Inherits {
$public:
$
$  void* operator new(size_t,void* anAddress) 
$  {
$    return anAddress;
$  }
$  void* operator new(size_t size) 
$  {
$    return Standard::Allocate(size); 
$  }
$  void  operator delete(void *anAddress) 
$  {
$    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
$  }
$
$%TICPublicmets
$
$%TICPublicfriends
$
$
$protected:
$
$%TICProtectedmets
$
$%TICProtectedfields
$
$private:
$
$%TICPrivatemets
$
$%TICPrivatefields
$%TICPrivatefriends
$};
$
$%TICDefines
$%TICInlineIncludes
$%TICUndefines
$
$// other Inline functions and methods (like "C++: function call" methods)
$%TICSuppMethod
$
$#endif
@end;

@template MPVIxx (%Class,%Suffix,%Supplement,%Methods) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#include <%Class.%Suffix>
$
$%Supplement 
$
$%Methods
@end;

-- ==============================
-- extraction of a storable class
-- ==============================

@template StorableClass(%ClassComment,
                        %Class,
                        %TICIncludes,
                        %Inherits,
                        %TICPublicmets,
                        %TICPublicfriends,
                        %TICProtectedmets,
                        %TICProtectedfields,
                        %TICPrivatemets,
                        %TICPrivatefields,
                        %TICPrivatefriends,
                        %TICDefines,
                        %TICInlineIncludes,
                        %TICUndefines,
                        %TICSuppMethod) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _%Class_HeaderFile
$#define _%Class_HeaderFile
$
$#ifndef _Standard_HeaderFile
$#include <Standard.hxx>
$#endif
$#ifndef _Standard_Macro_HeaderFile
$#include <Standard_Macro.hxx>
$#endif
$
$%TICIncludes
$
$Standard_EXPORT const Handle(Standard_Type)& STANDARD_TYPE(%Class);
$
$%ClassComment
$class %Class %Inherits {
$
$public:
$  void* operator new(size_t,void* anAddress) 
$  {
$    return anAddress;
$  }
$  void* operator new(size_t size) 
$  {
$    return Standard::Allocate(size); 
$  }
$  void  operator delete(void *anAddress) 
$  {
$    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
$  }
$
$%TICPublicmets
$%TICPublicfriends
$
$protected:
$
$%TICProtectedmets
$%TICProtectedfields
$
$private: 
$
$%TICPrivatemets
$%TICPrivatefields
$%TICPrivatefriends
$};
$
$%TICDefines
$%TICInlineIncludes
$%TICUndefines
$
$// other Inline functions and methods (like "C++: function call" methods)
$%TICSuppMethod
$
$#endif
@end;

@template StorableIxx(%Class,%Suffix,%Supplement,%Methods) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#include <%Class.%Suffix>
$
$#ifndef _Standard_Type_HeaderFile
$#include <Standard_Type.hxx>
$#endif
$
$%Supplement 
$
$%Methods
@end;

-- ===============
-- Enum extraction
-- ===============

@template EnumHXX(%EnumComment,%Class,%Values) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _%Class_HeaderFile
$#define _%Class_HeaderFile
$
$%EnumComment
$enum %Class {
$%Values
$};
$
$#ifndef _Standard_PrimitiveTypes_HeaderFile
$#include <Standard_PrimitiveTypes.hxx>
$#endif
$
$#endif
@end;

@template EnumCXX(%Class,%Values,%Nb) is
$
@end;

-- ================
-- Alias extraction
-- ================
@template AliasHXX(%Class,%Inherits, %HandleTypedef) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _%Class_HeaderFile
$#define _%Class_HeaderFile
$
$#ifndef _%Inherits_HeaderFile
$#include <%Inherits.hxx>
$#endif
$
$typedef %Inherits %Class;
$%HandleTypedef
$
$#define %Class_Type_() %Inherits_Type_()
$
$#endif
@end;

-- ==================
-- Pointer extraction
-- ==================

@template PointerHXX(%Class,%Inherits) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _%Class_HeaderFile
$#define _%Class_HeaderFile
$
$class %Inherits;
$
$typedef %Inherits* %Class;
$
$#endif
@end;

-- =====================
-- Exceptions extraction
-- =====================
@template ExceptionHXX(%Class,%Inherits) is
$// This file is generated by WOK (CPPExt).
$// Please do not edit this file; modify original file instead.
$// The copyright and license terms as defined for the original file apply to 
$// this header file considered to be the "object code" form of the original source.
$
$#ifndef _%Class_HeaderFile
$#define _%Class_HeaderFile
$
$#ifndef _Standard_HeaderFile
$#include <Standard.hxx>
$#endif
$#ifndef _Standard_DefineHandle_HeaderFile
$#include <Standard_DefineHandle.hxx>
$#endif
$#ifndef _Standard_DefineException_HeaderFile
$#include <Standard_DefineException.hxx>
$#endif
$#ifndef _Standard_SStream_HeaderFile
$#include <Standard_SStream.hxx>
$#endif
$
$#ifndef _%Inherits_HeaderFile
$#include <%Inherits.hxx>
$#endif
$#ifndef _Handle_%Class_HeaderFile
$#include <Handle_%Class.hxx>
$#endif
$
$#if !defined No_Exception && !defined No_%Class
$#define %Class_Raise_if(CONDITION,MESSAGE) \
$  if (CONDITION) %Class::Raise(MESSAGE);
$#else
$#define %Class_Raise_if(CONDITION,MESSAGE)
$#endif
$
$DEFINE_STANDARD_EXCEPTION(%Class,%Inherits)
$
$#endif
@end;

@template ExceptionMethod(%Class) is
$IMPLEMENT_STANDARD_EXCEPTION(%Class)
@end;

-- ==============
-- misc templates
-- ==============

@template Include(%IClass,%Suffix) is
$#ifndef _%IClass_HeaderFile
$#include <%IClass.%Suffix>
$#endif
@end; 

@template IncludeNoSafe(%IClass,%Suffix) is
$#include <%IClass.%Suffix>
@end; 

@template Define(%DName,%DValue) is
$#define %DName %DValue
@end;

@template ItemDefine(%DName,%DValue,%DBaseValue) is
$#define %DName %DValue
$#define %DName_hxx <%DBaseValue.hxx>
@end;

@template ItemConstraintHandle(%DName,%DValue) is
$#define Handle_%DName Handle_%DValue
@end;

@template ItemHandleDefine (%DName,%DValue) is
$#define Handle_%DName Handle_%DValue
$#define %DName_Type_() %DValue_Type_()
@end;

@template Undefine(%DName) is
$#undef %DName
@end;

@template ItemUndefine(%DName) is
$#undef %DName
$#undef %DName_hxx
@end;

@template ItemConstraintHandleUndef(%DName) is
$#undef Handle_%DName
@end;

@template ItemHandleUndefine(%DName) is
$#undef Handle_%DName
$#undef %DName_Type_
@end;

@template ShortDec(%IClass) is
$class %IClass;
@end;

-- ==============================================
-- Methods templates
-- ==============================================

@template ConstructorHeader(%Class,%Arguments) is
$  %Class(%Arguments)\^
@end;

@template MethodHeader(%Virtual,%RetSpec,%Return,%And,%MethodName,%Arguments,%MetSpec) is
$  %Virtual %RetSpec %Return%And %MethodName(%Arguments) %MetSpec\^
@end;

@template ExternalConstructorHeader(%Class,%Arguments) is
$%Class::%Class(%Arguments)\^
@end;

@template ExternalMethodHeader(%Class,%Virtual,%RetSpec,%Return,%And,%MethodName,%Arguments,%MetSpec) is
$%Virtual %RetSpec %Return%And %Class::%MethodName(%Arguments) %MetSpec\^
@end;

@template MethodTemplateDec(%MethodComment,%Method) is
$  %MethodComment
$  Standard_EXPORT %Method;
@end;

@template MethodTemplateDecInlineWNT(%MethodComment,%Method) is
$  %MethodComment
$  %Method;
@end;

@template InlineMethodTemplateDec(%Method) is
$  %Method\^
@end;

@template MethodTemplateDef(%Method,%MBody) is
$%Method
${
$  %MBody
$}
@end;

@template EmptyDestructorTemplate(%Class) is
$
@end;

@template FullEmptyHandleDestructorTemplate(%Class) is
$
@end;

@template FullEmptyDestructorTemplate(%Class) is
$
@end;

-- ===============
-- current methods
-- ===============

-- type management : BEGIN

@template TypeMgtAncestorType(%Nb) is
$\^
@end;

@template TypeMgtAncestor(%Nb,%Ancestors) is
$  STANDARD_TYPE(%Ancestors),
@end;

@template TypeMgt(%Class,%Inherits,%Ancestors) is
$
$IMPLEMENT_STANDARD_TYPE(%Class)
$IMPLEMENT_STANDARD_SUPERTYPE_ARRAY()
$%Inherits
$IMPLEMENT_STANDARD_SUPERTYPE_ARRAY_END()
$IMPLEMENT_STANDARD_TYPE_END(%Class)
@end;

-- type management : END

@template DownCast(%Class,%IClass) is
$IMPLEMENT_DOWNCAST(%Class,%IClass)
@end;

@template DynamicType(%Class) is
$IMPLEMENT_STANDARD_RTTI(%Class)
@end;

@template IsKind(%Class,%IClass) is
$
@end;
