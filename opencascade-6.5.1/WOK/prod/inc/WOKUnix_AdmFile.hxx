// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKUnix_AdmFile_HeaderFile
#define _WOKUnix_AdmFile_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _WOKUnix_FDescr_HeaderFile
#include <WOKUnix_FDescr.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Handle_WOKUnix_Path_HeaderFile
#include <Handle_WOKUnix_Path.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
class Standard_ProgramError;
class TCollection_HAsciiString;
class WOKUnix_Path;
class TColStd_HSequenceOfHAsciiString;


//! Reads a file in WOK format : <br>
//! <br>
//!          - lines beginning with # are ignored <br>
//! <br>
//!          - lines ending with \ are continued <br>
//! <br>
//!          - empty lines are ignored <br>
//! <br>
class WOKUnix_AdmFile  : public WOKUnix_FDescr {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  //! empty contructor <br>
  Standard_EXPORT   WOKUnix_AdmFile();
  //! constructor initialising mypath <br>
  Standard_EXPORT   WOKUnix_AdmFile(const Handle(TCollection_HAsciiString)& apath);
  //! constructor initialising mypath <br>
  Standard_EXPORT   WOKUnix_AdmFile(const Handle(WOKUnix_Path)& apath);
  //! Reads the file <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString Read() ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
