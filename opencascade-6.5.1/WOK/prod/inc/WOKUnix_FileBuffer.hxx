// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKUnix_FileBuffer_HeaderFile
#define _WOKUnix_FileBuffer_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_WOKUnix_FileBuffer_HeaderFile
#include <Handle_WOKUnix_FileBuffer.hxx>
#endif

#ifndef _WOKUnix_FDescr_HeaderFile
#include <WOKUnix_FDescr.hxx>
#endif
#ifndef _WOKUnix_Buffer_HeaderFile
#include <WOKUnix_Buffer.hxx>
#endif
#ifndef _WOKUnix_BufferIs_HeaderFile
#include <WOKUnix_BufferIs.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _WOKUnix_Timeval_HeaderFile
#include <WOKUnix_Timeval.hxx>
#endif
#ifndef _WOKUnix_FDSet_HeaderFile
#include <WOKUnix_FDSet.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
class WOKUnix_BufferOverflow;
class WOKUnix_ProcessTimeOut;
class WOKUnix_FDescr;
class TColStd_HSequenceOfHAsciiString;



class WOKUnix_FileBuffer : public WOKUnix_Buffer {

public:

  
  Standard_EXPORT   WOKUnix_FileBuffer(const WOKUnix_FDescr& afd,const WOKUnix_BufferIs astd);
  
  Standard_EXPORT   virtual  void Select(Standard_Integer& afd,WOKUnix_Timeval& atimeout,WOKUnix_FDSet& aset) const;
  
  Standard_EXPORT   virtual  void Acquit(const Standard_Integer astatus,const WOKUnix_FDSet& aset) ;
  
  Standard_EXPORT   virtual  Handle_TColStd_HSequenceOfHAsciiString Echo() ;
  
  Standard_EXPORT   virtual  Handle_TColStd_HSequenceOfHAsciiString Errors() ;
  
  Standard_EXPORT   virtual  void Close() ;




  DEFINE_STANDARD_RTTI(WOKUnix_FileBuffer)

protected:




private: 

  
  Standard_EXPORT     void Dump() ;

WOKUnix_FDescr mybuffer;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
