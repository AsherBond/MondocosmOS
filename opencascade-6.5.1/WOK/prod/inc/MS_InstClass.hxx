// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MS_InstClass_HeaderFile
#define _MS_InstClass_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_MS_InstClass_HeaderFile
#include <Handle_MS_InstClass.hxx>
#endif

#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _MS_Class_HeaderFile
#include <MS_Class.hxx>
#endif
#ifndef _Handle_MS_Type_HeaderFile
#include <Handle_MS_Type.hxx>
#endif
class TCollection_HAsciiString;
class TColStd_HSequenceOfHAsciiString;
class MS_Type;



class MS_InstClass : public MS_Class {

public:

  
  Standard_EXPORT   MS_InstClass(const Handle(TCollection_HAsciiString)& aName,const Handle(TCollection_HAsciiString)& aPackage);
  
  Standard_EXPORT   MS_InstClass(const Handle(TCollection_HAsciiString)& aName,const Handle(TCollection_HAsciiString)& aPackage,const Handle(TCollection_HAsciiString)& Mother,const Standard_Boolean aPrivate,const Standard_Boolean aDeferred,const Standard_Boolean aInComplete);
  
  Standard_EXPORT     void Validity(const Handle(TCollection_HAsciiString)& aName,const Handle(TCollection_HAsciiString)& aPackage) const;
  
  Standard_EXPORT     void InstType(const Handle(TCollection_HAsciiString)& aType,const Handle(TCollection_HAsciiString)& aPackage) ;
  
  Standard_EXPORT     void InstType(const Handle(TCollection_HAsciiString)& aType) ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString InstTypes() const;
  
  Standard_EXPORT     void InstType(const Handle(MS_Type)& aType) ;
  
  Standard_EXPORT     void BasicInstType(const Handle(TCollection_HAsciiString)& aType) ;
  //! manage the inst types save buffer. <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString BasicInstTypes() const;
  
  Standard_EXPORT     void RemoveInstType(const Handle(TCollection_HAsciiString)& aType) ;
  //! the type used to instantiates the generic class <br>
  Standard_EXPORT     void ResolveInstType(const Handle(TCollection_HAsciiString)& aType,const Handle(TCollection_HAsciiString)& aTypeConv) ;
  
  Standard_EXPORT     void GenType(const Handle(TCollection_HAsciiString)& aType) ;
  //! the type used to instantiates if the class is nested <br>
//!          they are transformed to inst types when the <br>
//!          method "Instantiates" is called <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GenTypes() const;
  
  Standard_EXPORT     void GenClass(const Handle(TCollection_HAsciiString)& aName) ;
  
  Standard_EXPORT     void GenClass(const Handle(TCollection_HAsciiString)& aName,const Handle(TCollection_HAsciiString)& aPackage) ;
  //! the corresponding generic class. <br>
  Standard_EXPORT     Handle_TCollection_HAsciiString GenClass() const;
  
  Standard_EXPORT     void NestedStdClass(const Handle(TCollection_HAsciiString)& aClass) ;
  
  Standard_EXPORT     void NestedInsClass(const Handle(TCollection_HAsciiString)& aClass) ;
  
  Standard_EXPORT     void RemoveNestedStdClass(const Handle(TCollection_HAsciiString)& aClass) ;
  
  Standard_EXPORT     void RemoveNestedInsClass(const Handle(TCollection_HAsciiString)& aClass) ;
  
  Standard_EXPORT     void NestedNeuClass(const Handle(TCollection_HAsciiString)& aClass) ;
  //! the classes generated by instantiation of a generic <br>
//!          class. <br>
//!          these classes may contains generics types but <br>
//!          the resolution will occur with a call to the <br>
//!          method "Instantiates" <br>
  Standard_EXPORT     void RemoveNestedNeuClass(const Handle(TCollection_HAsciiString)& aClass) ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetNestedStdClassesName() const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetNestedInsClassesName() const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetNestedNeuClassesName() const;
  //! First phase of instantiation <br>
//!          Name and types are created in the metaschema <br>
//!          this is a declaration of all types created by the instantiate command. <br>
  Standard_EXPORT     void Instantiates() ;
  //! Second phase of instantiation. <br>
//!          we create full types <br>
//!          the InstClasses are transformed in StdClasses. <br>
//!          All the generic classes used must be in the MetaSchema <br>
  Standard_EXPORT     void InstToStd() ;
  
  Standard_EXPORT     Standard_Boolean IsAlreadyDone() const;
  //! test or set the flag when the instantiation has been done <br>
  Standard_EXPORT     void AlreadyDone(const Standard_Boolean flag) ;
  //! Prepare a instclass for a second instantiates pass <br>
  Standard_EXPORT     void Initialize() ;




  DEFINE_STANDARD_RTTI(MS_InstClass)

protected:




private: 


Handle_TCollection_HAsciiString myGenClass;
Handle_TColStd_HSequenceOfHAsciiString myBasicInsType;
Handle_TColStd_HSequenceOfHAsciiString myInstType;
Handle_TColStd_HSequenceOfHAsciiString myGenType;
Handle_TColStd_HSequenceOfHAsciiString myNestStd;
Handle_TColStd_HSequenceOfHAsciiString myNestIns;
Handle_TColStd_HSequenceOfHAsciiString myNestNeu;
Handle_TCollection_HAsciiString myComment;
Standard_Boolean myInstFlag;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
