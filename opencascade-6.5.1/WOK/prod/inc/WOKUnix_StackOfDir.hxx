// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKUnix_StackOfDir_HeaderFile
#define _WOKUnix_StackOfDir_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _WOKUnix_Dir_HeaderFile
#include <WOKUnix_Dir.hxx>
#endif
#ifndef _Handle_WOKUnix_StackNodeOfStackOfDir_HeaderFile
#include <Handle_WOKUnix_StackNodeOfStackOfDir.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NoSuchObject;
class WOKUnix_StackIteratorOfStackOfDir;
class WOKUnix_StackNodeOfStackOfDir;



class WOKUnix_StackOfDir  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   WOKUnix_StackOfDir();
  
  Standard_EXPORT    const WOKUnix_StackOfDir& Assign(const WOKUnix_StackOfDir& Other) ;
   const WOKUnix_StackOfDir& operator =(const WOKUnix_StackOfDir& Other) 
{
  return Assign(Other);
}
  
        Standard_Boolean IsEmpty() const;
  
        Standard_Integer Depth() const;
  
  Standard_EXPORT    const WOKUnix_Dir& Top() const;
  
  Standard_EXPORT     void Push(const WOKUnix_Dir& I) ;
  
  Standard_EXPORT     void Pop() ;
  
  Standard_EXPORT     void Clear() ;
~WOKUnix_StackOfDir()
{
  Clear();
}
  
  Standard_EXPORT     WOKUnix_Dir& ChangeTop() ;


friend class WOKUnix_StackIteratorOfStackOfDir;



protected:





private:

  
  Standard_EXPORT   WOKUnix_StackOfDir(const WOKUnix_StackOfDir& Other);


Standard_Address myTop;
Standard_Integer myDepth;


};

#define Item WOKUnix_Dir
#define Item_hxx <WOKUnix_Dir.hxx>
#define TCollection_StackNode WOKUnix_StackNodeOfStackOfDir
#define TCollection_StackNode_hxx <WOKUnix_StackNodeOfStackOfDir.hxx>
#define TCollection_StackIterator WOKUnix_StackIteratorOfStackOfDir
#define TCollection_StackIterator_hxx <WOKUnix_StackIteratorOfStackOfDir.hxx>
#define Handle_TCollection_StackNode Handle_WOKUnix_StackNodeOfStackOfDir
#define TCollection_StackNode_Type_() WOKUnix_StackNodeOfStackOfDir_Type_()
#define TCollection_Stack WOKUnix_StackOfDir
#define TCollection_Stack_hxx <WOKUnix_StackOfDir.hxx>

#include <TCollection_Stack.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_StackNode
#undef TCollection_StackNode_hxx
#undef TCollection_StackIterator
#undef TCollection_StackIterator_hxx
#undef Handle_TCollection_StackNode
#undef TCollection_StackNode_Type_
#undef TCollection_Stack
#undef TCollection_Stack_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
