// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKUnix_ShellManager_HeaderFile
#define _WOKUnix_ShellManager_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_WOKUnix_Shell_HeaderFile
#include <Handle_WOKUnix_Shell.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_WOKUnix_RemoteShell_HeaderFile
#include <Handle_WOKUnix_RemoteShell.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
class WOKUnix_Shell;
class WOKUnix_RemoteShell;
class TCollection_HAsciiString;
class TCollection_AsciiString;



class WOKUnix_ShellManager  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  //! returns one unlocked shell of processes list <br>
  Standard_EXPORT   static  Handle_WOKUnix_Shell GetShell() ;
  //! get a precise shell <br>
  Standard_EXPORT   static  Handle_WOKUnix_Shell GetShell(const Standard_Integer apid) ;
  //! returns a host's unlocked remote shell of processes list <br>
  Standard_EXPORT   static  Handle_WOKUnix_RemoteShell GetRemoteShell(const Handle(TCollection_HAsciiString)& ahost,const TCollection_AsciiString& apath) ;





protected:





private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
