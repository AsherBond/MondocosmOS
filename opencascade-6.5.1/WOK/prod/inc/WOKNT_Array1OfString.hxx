// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKNT_Array1OfString_HeaderFile
#define _WOKNT_Array1OfString_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
class Standard_RangeError;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class Standard_OutOfMemory;
class TCollection_HAsciiString;



class WOKNT_Array1OfString  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   WOKNT_Array1OfString(const Standard_Integer Low,const Standard_Integer Up);
  
  Standard_EXPORT   WOKNT_Array1OfString(const Handle(TCollection_HAsciiString)& Item,const Standard_Integer Low,const Standard_Integer Up);
  
  Standard_EXPORT     void Init(const Handle(TCollection_HAsciiString)& V) ;
  
  Standard_EXPORT     void Destroy() ;
~WOKNT_Array1OfString()
{
  Destroy();
}
  
        Standard_Boolean IsAllocated() const;
  
  Standard_EXPORT    const WOKNT_Array1OfString& Assign(const WOKNT_Array1OfString& Other) ;
   const WOKNT_Array1OfString& operator =(const WOKNT_Array1OfString& Other) 
{
  return Assign(Other);
}
  
        Standard_Integer Length() const;
  
        Standard_Integer Lower() const;
  
        Standard_Integer Upper() const;
  
        void SetValue(const Standard_Integer Index,const Handle(TCollection_HAsciiString)& Value) ;
  
       const Handle_TCollection_HAsciiString& Value(const Standard_Integer Index) const;
     const Handle_TCollection_HAsciiString& operator ()(const Standard_Integer Index) const
{
  return Value(Index);
}
  
        Handle_TCollection_HAsciiString& ChangeValue(const Standard_Integer Index) ;
      Handle_TCollection_HAsciiString& operator ()(const Standard_Integer Index) 
{
  return ChangeValue(Index);
}





protected:





private:

  
  Standard_EXPORT   WOKNT_Array1OfString(const WOKNT_Array1OfString& AnArray);


Standard_Integer myLowerBound;
Standard_Integer myUpperBound;
Standard_Address myStart;
Standard_Boolean isAllocated;


};

#define Array1Item Handle_TCollection_HAsciiString
#define Array1Item_hxx <TCollection_HAsciiString.hxx>
#define TCollection_Array1 WOKNT_Array1OfString
#define TCollection_Array1_hxx <WOKNT_Array1OfString.hxx>

#include <TCollection_Array1.lxx>

#undef Array1Item
#undef Array1Item_hxx
#undef TCollection_Array1
#undef TCollection_Array1_hxx


// other Inline functions and methods (like "C++: function call" methods)


#endif
