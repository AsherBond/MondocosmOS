// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MS_ExecPart_HeaderFile
#define _MS_ExecPart_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_MS_ExecPart_HeaderFile
#include <Handle_MS_ExecPart.hxx>
#endif

#ifndef _Handle_MS_HSequenceOfExecFile_HeaderFile
#include <Handle_MS_HSequenceOfExecFile.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _MS_Exec_HeaderFile
#include <MS_Exec.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Handle_MS_ExecFile_HeaderFile
#include <Handle_MS_ExecFile.hxx>
#endif
class MS_HSequenceOfExecFile;
class TColStd_HSequenceOfHAsciiString;
class TCollection_HAsciiString;
class MS_ExecFile;



class MS_ExecPart : public MS_Exec {

public:

  
  Standard_EXPORT   MS_ExecPart(const Handle(TCollection_HAsciiString)& anExecutable);
  
  Standard_EXPORT     void AddFile(const Handle(MS_ExecFile)& aFile) ;
  
  Standard_EXPORT     void AddLibrary(const Handle(TCollection_HAsciiString)& aName) ;
  
  Standard_EXPORT     void AddExternal(const Handle(TCollection_HAsciiString)& aName) ;
  
  Standard_EXPORT     Handle_MS_HSequenceOfExecFile Files() const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString Libraries() const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString Externals() const;




  DEFINE_STANDARD_RTTI(MS_ExecPart)

protected:




private: 


Handle_MS_HSequenceOfExecFile myFiles;
Handle_TColStd_HSequenceOfHAsciiString myLib;
Handle_TColStd_HSequenceOfHAsciiString myExt;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
