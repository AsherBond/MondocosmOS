// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKAPI_Process_HeaderFile
#define _WOKAPI_Process_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _WOKAPI_Session_HeaderFile
#include <WOKAPI_Session.hxx>
#endif
#ifndef _WOKAPI_BuildProcess_HeaderFile
#include <WOKAPI_BuildProcess.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _Handle_WOKTools_HSequenceOfDefine_HeaderFile
#include <Handle_WOKTools_HSequenceOfDefine.hxx>
#endif
class WOKAPI_Session;
class TCollection_HAsciiString;
class TColStd_HSequenceOfHAsciiString;
class WOKAPI_BuildProcess;
class WOKTools_HSequenceOfDefine;



class WOKAPI_Process  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   WOKAPI_Process(const WOKAPI_Session& asession);
  //! Initialize process <br>
  Standard_EXPORT     Standard_Boolean Init(const Handle(TCollection_HAsciiString)& abench,const Standard_Boolean debug,const Handle(TCollection_HAsciiString)& aprof) ;
  //! Explores Init lines in config file and performs Init <br>
  Standard_EXPORT     Standard_Integer ExploreInitSection(const Handle(TColStd_HSequenceOfHAsciiString)& lines,const Standard_Integer fromindex = 1) ;
  
  Standard_EXPORT    const WOKAPI_BuildProcess& BuildProcess() const;
  //! Advance to next section in executable state (regarding to :<cond> conditions <br>
  Standard_EXPORT     Standard_Integer AdvanceToNextValidSection(const Handle(TColStd_HSequenceOfHAsciiString)& lines,const Standard_Integer fromindex = 1) ;
  
  Standard_EXPORT     Standard_Integer ExploreTclSection(const Handle(TColStd_HSequenceOfHAsciiString)& lines,const Standard_Integer fromindex = 1) ;
  
  Standard_EXPORT     Standard_Boolean ExecuteTcl(const Handle(TCollection_HAsciiString)& atclsection) ;
  
  Standard_EXPORT     Standard_Integer ExploreBuildSection(const Handle(TColStd_HSequenceOfHAsciiString)& lines,const Standard_Integer fromindex = 1) ;
  
  Standard_EXPORT     Standard_Boolean ExecuteBuild(const Handle(WOKTools_HSequenceOfDefine)& params) ;
  
  Standard_EXPORT     Standard_Boolean ExecuteFile(const Handle(TCollection_HAsciiString)& afile) ;





protected:





private:



WOKAPI_Session mysession;
WOKAPI_BuildProcess mybp;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
