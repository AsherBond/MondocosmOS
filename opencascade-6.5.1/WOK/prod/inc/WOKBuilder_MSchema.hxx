// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKBuilder_MSchema_HeaderFile
#define _WOKBuilder_MSchema_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_WOKBuilder_MSchema_HeaderFile
#include <Handle_WOKBuilder_MSchema.hxx>
#endif

#ifndef _Handle_MS_MetaSchema_HeaderFile
#include <Handle_MS_MetaSchema.hxx>
#endif
#ifndef _WOKBuilder_DataMapOfMSActionIDOfMSAction_HeaderFile
#include <WOKBuilder_DataMapOfMSActionIDOfMSAction.hxx>
#endif
#ifndef _WOKBuilder_DataMapOfHAsciiStringOfMSEntity_HeaderFile
#include <WOKBuilder_DataMapOfHAsciiStringOfMSEntity.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _Handle_MS_ExecFile_HeaderFile
#include <Handle_MS_ExecFile.hxx>
#endif
#ifndef _Handle_WOKBuilder_MSAction_HeaderFile
#include <Handle_WOKBuilder_MSAction.hxx>
#endif
#ifndef _Handle_WOKBuilder_Specification_HeaderFile
#include <Handle_WOKBuilder_Specification.hxx>
#endif
#ifndef _WOKBuilder_MSActionStatus_HeaderFile
#include <WOKBuilder_MSActionStatus.hxx>
#endif
class MS_MetaSchema;
class TCollection_HAsciiString;
class TColStd_HSequenceOfHAsciiString;
class MS_ExecFile;
class WOKBuilder_MSActionID;
class WOKBuilder_MSAction;
class WOKBuilder_Specification;


//! Encapsulates MS_MetaSchema <br>
//!          Provides WOK interface with WOK and MetaSchema <br>
//!          Handles the WOK file nominating conventions (PK_Class.cdl ...) <br>
//! <br>
class WOKBuilder_MSchema : public MMgt_TShared {

public:

  
  Standard_EXPORT   WOKBuilder_MSchema();
  //! Returns the MS Handle of MetaSchema <br>
//!          WOKBuilder private purpose <br>
       const Handle_MS_MetaSchema& MetaSchema() const;
  //! Tests if a global entity or a type is defined and complete in MSchema <br>
  Standard_EXPORT     Standard_Boolean IsDefined(const Handle(TCollection_HAsciiString)& anentity) const;
  //! Removes a global entity from MS_MetaSchema <br>
  Standard_EXPORT     void RemoveEntity(const Handle(TCollection_HAsciiString)& anentity) ;
  //! Removes a type from MS_MetaSchema <br>
  Standard_EXPORT     void RemoveType(const Handle(TCollection_HAsciiString)& atype) ;
  //! Returns the type <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetEntityTypes(const Handle(TCollection_HAsciiString)& anentity) const;
  //! Removes all Automatically generated Types <br>
//!          (instanciations) <br>
  Standard_EXPORT     void RemoveAutoTypes() const;
  //! Returns the file defining entity <br>
  Standard_EXPORT     Handle_TCollection_HAsciiString AssociatedFile(const Handle(TCollection_HAsciiString)& anentity) const;
  //! Returns the GlobalEntity defining type <br>
  Standard_EXPORT     Handle_TCollection_HAsciiString AssociatedEntity(const Handle(TCollection_HAsciiString)& atype) const;
  //! Returns source Files Issued From CDL <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString TypeSourceFiles(const Handle(TCollection_HAsciiString)& atype) const;
  //! Returns the sequence of parts of a Executable GlobalEntity <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableParts(const Handle(TCollection_HAsciiString)& anexecutable) const;
  //! Returns the sequence of all source files of an executable <br>
//! <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableFiles(const Handle(TCollection_HAsciiString)& anexecutable) const;
  //! Returns the sequence of source files of a part <br>
//! <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableFiles(const Handle(TCollection_HAsciiString)& anexecutable,const Handle(TCollection_HAsciiString)& anexecpart) const;
  //! Returns the sequence of all modules (basenames) of an executable <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableModules(const Handle(TCollection_HAsciiString)& anexecutable) const;
  //! Returns the sequence of modules (basenames) of a part <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableModules(const Handle(TCollection_HAsciiString)& anexecutable,const Handle(TCollection_HAsciiString)& anexecpart) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableLibraries(const Handle(TCollection_HAsciiString)& anexecutable) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableLibraries(const Handle(TCollection_HAsciiString)& anexecutable,const Handle(TCollection_HAsciiString)& anexecpart) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableExternals(const Handle(TCollection_HAsciiString)& anexecutable) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ExecutableExternals(const Handle(TCollection_HAsciiString)& anexecutable,const Handle(TCollection_HAsciiString)& anexecpart) const;
  //! Returns the sequence of parts of a Executable GlobalEntity <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ComponentParts(const Handle(TCollection_HAsciiString)& anexecutable) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString SchemaClasses(const Handle(TCollection_HAsciiString)& aschema) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString SortedSchemaClasses(const Handle(TCollection_HAsciiString)& aschema) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString SchemaDescrMissingClasses(const Handle(TCollection_HAsciiString)& aschema) const;
  
  Standard_EXPORT     Standard_Boolean IsActionDefined(const WOKBuilder_MSActionID& anid) const;
  
  Standard_EXPORT     void AddAction(const WOKBuilder_MSActionID& anid) const;
  
  Standard_EXPORT     WOKBuilder_MSActionID GetStoredActionID(const WOKBuilder_MSActionID& anid) const;
  //! Gets an action or creates it <br>
  Standard_EXPORT     Handle_WOKBuilder_MSAction GetAction(const WOKBuilder_MSActionID& anid) ;
  
  Standard_EXPORT     void ChangeActionToFailed(const WOKBuilder_MSActionID& anid) ;
  //! Adds Action to the map if it does not exists <br>
//!          Updates Date if it exists <br>
  Standard_EXPORT     void ChangeAddAction(const WOKBuilder_MSActionID& anid,const Handle(WOKBuilder_Specification)& thefile) ;
  //! Get the status of an action on the MetaSchema <br>
  Standard_EXPORT     WOKBuilder_MSActionStatus GetActionStatus(const WOKBuilder_MSActionID& anaction) ;
  //! Removes an action from the map/ <br>
  Standard_EXPORT     void RemoveAction(const WOKBuilder_MSActionID& anaction) ;
  //! Empties MetaSchema and Action Map <br>
  Standard_EXPORT     void Clear() ;




  DEFINE_STANDARD_RTTI(WOKBuilder_MSchema)

protected:




private: 

  
  Standard_EXPORT     Handle_TCollection_HAsciiString ExecFileName(const Handle(MS_ExecFile)& anexecfile) const;

Handle_MS_MetaSchema myschema;
WOKBuilder_DataMapOfMSActionIDOfMSAction myactions;
WOKBuilder_DataMapOfHAsciiStringOfMSEntity myentities;


};


#include <WOKBuilder_MSchema.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
