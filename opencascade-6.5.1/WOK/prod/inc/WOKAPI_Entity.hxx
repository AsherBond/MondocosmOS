// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKAPI_Entity_HeaderFile
#define _WOKAPI_Entity_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_WOKernel_Entity_HeaderFile
#include <Handle_WOKernel_Entity.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _Handle_WOKUtils_HSequenceOfParamItem_HeaderFile
#include <Handle_WOKUtils_HSequenceOfParamItem.hxx>
#endif
#ifndef _Handle_WOKTools_HSequenceOfReturnValue_HeaderFile
#include <Handle_WOKTools_HSequenceOfReturnValue.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
#ifndef _Handle_WOKernel_Session_HeaderFile
#include <Handle_WOKernel_Session.hxx>
#endif
#ifndef _Handle_WOKTools_HSequenceOfDefine_HeaderFile
#include <Handle_WOKTools_HSequenceOfDefine.hxx>
#endif
class WOKernel_Entity;
class WOKAPI_Session;
class WOKAPI_Factory;
class WOKAPI_Warehouse;
class WOKAPI_Parcel;
class WOKAPI_Workshop;
class WOKAPI_Workbench;
class WOKAPI_Unit;
class WOKAPI_File;
class WOKAPI_Locator;
class WOKAPI_BuildProcess;
class TCollection_HAsciiString;
class WOKAPI_SequenceOfEntity;
class TColStd_HSequenceOfHAsciiString;
class WOKUtils_HSequenceOfParamItem;
class TColStd_SequenceOfHAsciiString;
class WOKTools_HSequenceOfReturnValue;
class WOKTools_Return;
class WOKernel_Session;
class WOKTools_HSequenceOfDefine;



class WOKAPI_Entity  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   WOKAPI_Entity();
  
  Standard_EXPORT   WOKAPI_Entity(const WOKAPI_Entity& aent);
  
  Standard_EXPORT   WOKAPI_Entity(const WOKAPI_Session& asession,const Handle(TCollection_HAsciiString)& aname,const Standard_Boolean verbose = Standard_False,const Standard_Boolean getit = Standard_True);
  
  Standard_EXPORT     void Destructor() ;
Standard_EXPORT virtual ~WOKAPI_Entity () {}
  
  Standard_EXPORT   virtual  Standard_Boolean IsValid() const;
  
  Standard_EXPORT   virtual  Standard_Boolean IsAccessible() const;
  
  Standard_EXPORT   virtual  Standard_Boolean IsWriteAble() const;
  
  Standard_EXPORT     Standard_Boolean IsSession() const;
  
  Standard_EXPORT     Standard_Boolean IsFactory() const;
  
  Standard_EXPORT     Standard_Boolean IsWarehouse() const;
  
  Standard_EXPORT     Standard_Boolean IsParcel() const;
  
  Standard_EXPORT     Standard_Boolean IsWorkshop() const;
  
  Standard_EXPORT     Standard_Boolean IsWorkbench() const;
  
  Standard_EXPORT     Standard_Boolean IsUnit() const;
  
  Standard_EXPORT   virtual  Standard_Boolean NestedEntities(WOKAPI_SequenceOfEntity& aseq) const;
  
  Standard_EXPORT     WOKAPI_Entity NestingEntity() const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString Name() const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString Code() const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString UserPath() const;
  
  Standard_EXPORT   virtual  void Open(const WOKAPI_Session& aSession,const Handle(TCollection_HAsciiString)& aPath) ;
  
  Standard_EXPORT   virtual  void Close() ;
  
  Standard_EXPORT   virtual  Standard_Boolean Destroy() ;
  
  Standard_EXPORT     Standard_Boolean IsParameterSet(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString EntityParameterName(const Handle(TCollection_HAsciiString)& aparam) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString ParameterValue(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString ParameterEval(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ParameterArguments(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Handle_WOKUtils_HSequenceOfParamItem ParameterClassValues(const Handle(TCollection_HAsciiString)& aclass) const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ParameterClasses() const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ParameterSearchList() const;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString ParameterClassFiles(const Handle(TCollection_HAsciiString)& aclass) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString FindParameterFile(const Handle(TCollection_HAsciiString)& afile) const;
  
  Standard_EXPORT     void ParameterSet(const Handle(TCollection_HAsciiString)& aname,const Handle(TCollection_HAsciiString)& avalue) const;
  
  Standard_EXPORT     void ParameterUnSet(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     void ParameterReset() const;
  
  Standard_EXPORT     Standard_Boolean IsFileType(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Standard_Boolean IsFileTypeFileDependent(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString GetFileTypeDefinition(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString GetFileTypeDirectory(const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     void GetFileTypeArguments(const Handle(TCollection_HAsciiString)& aname,TColStd_SequenceOfHAsciiString& argseq) const;
  
  Standard_EXPORT     void FileTypes(TColStd_SequenceOfHAsciiString& typeseq) const;
  
  Standard_EXPORT     void GetFiles(TColStd_SequenceOfHAsciiString& fileseq) const;
  
  Standard_EXPORT     void GetDirs(TColStd_SequenceOfHAsciiString& dirseq) const;
  
  Standard_EXPORT     Standard_Boolean CheckDirs(const Standard_Boolean createifmissing = Standard_True,const Standard_Boolean besilent = Standard_False) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString GetFilePath(const Handle(TCollection_HAsciiString)& atype,const Handle(TCollection_HAsciiString)& aname) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString GetFilePath(const Handle(TCollection_HAsciiString)& atype) const;
  
  Standard_EXPORT     void GetInterpFiles(Handle(WOKTools_HSequenceOfReturnValue)& files) const;
  
  Standard_EXPORT     Standard_Integer GetEnvActions(const WOKAPI_Session& asession,WOKTools_Return& actions) const;
  
  Standard_EXPORT   virtual  Standard_Boolean HomePage(const Standard_OStream& astream) const;
  
  Standard_EXPORT   virtual  Standard_Boolean ItemHRef(const Standard_OStream& astream) const;


friend class WOKAPI_Session;
friend class WOKAPI_Factory;
friend class WOKAPI_Warehouse;
friend class WOKAPI_Parcel;
friend class WOKAPI_Workshop;
friend class WOKAPI_Workbench;
friend class WOKAPI_Unit;
friend class WOKAPI_File;
friend class WOKAPI_Locator;
friend class WOKAPI_BuildProcess;



protected:

  
  Standard_EXPORT   virtual  Standard_Boolean PageHeader(const Standard_OStream& astream) const;
  
  Standard_EXPORT   virtual  Standard_Boolean PageFooter(const Standard_OStream& astream) const;


Handle_WOKernel_Entity myEntity;


private:

  
  Standard_EXPORT     void Set(const Handle(WOKernel_Entity)& anentity) ;
  
  Standard_EXPORT     Handle_WOKernel_Session Session() const;
  
       const Handle_WOKernel_Entity& Entity() const;
  
  Standard_EXPORT     void UpdateBeforeDestroy(const Handle(WOKernel_Entity)& anesting) ;
  
  Standard_EXPORT     void UpdateBeforeBuild(const Handle(WOKernel_Entity)& anesting) ;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString BuildName(const Handle(TCollection_HAsciiString)& path) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString BuildNesting(const Handle(TCollection_HAsciiString)& path) const;
  
  Standard_EXPORT     Handle_WOKUtils_HSequenceOfParamItem GetBuildParameters(const WOKAPI_Session& asession,const Handle(TCollection_HAsciiString)& aname,const WOKAPI_Entity& anesting,const Handle(WOKTools_HSequenceOfDefine)& defines,const Standard_Boolean usedefaults) const;
  
  Standard_EXPORT     Standard_Boolean BuildEntity(const WOKAPI_Session& asession,const Handle(TCollection_HAsciiString)& name,const WOKAPI_Entity& anesting,const Handle(WOKTools_HSequenceOfDefine)& defines,const Standard_Boolean usedefaults,const Standard_Boolean checkhome = Standard_False) ;




};


#include <WOKAPI_Entity.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
