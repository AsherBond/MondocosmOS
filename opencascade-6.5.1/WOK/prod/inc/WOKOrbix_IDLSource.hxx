// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKOrbix_IDLSource_HeaderFile
#define _WOKOrbix_IDLSource_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_WOKOrbix_IDLSource_HeaderFile
#include <Handle_WOKOrbix_IDLSource.hxx>
#endif

#ifndef _WOKStep_Source_HeaderFile
#include <WOKStep_Source.hxx>
#endif
#ifndef _Handle_WOKMake_BuildProcess_HeaderFile
#include <Handle_WOKMake_BuildProcess.hxx>
#endif
#ifndef _Handle_WOKernel_DevUnit_HeaderFile
#include <Handle_WOKernel_DevUnit.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_WOKernel_File_HeaderFile
#include <Handle_WOKernel_File.hxx>
#endif
#ifndef _Handle_WOKMake_HSequenceOfInputFile_HeaderFile
#include <Handle_WOKMake_HSequenceOfInputFile.hxx>
#endif
class WOKMake_BuildProcess;
class WOKernel_DevUnit;
class TCollection_HAsciiString;
class WOKernel_File;
class WOKMake_HSequenceOfInputFile;



class WOKOrbix_IDLSource : public WOKStep_Source {

public:

  
  Standard_EXPORT   WOKOrbix_IDLSource(const Handle(WOKMake_BuildProcess)& abp,const Handle(WOKernel_DevUnit)& aunit,const Handle(TCollection_HAsciiString)& acode,const Standard_Boolean checked,const Standard_Boolean hidden);




  DEFINE_STANDARD_RTTI(WOKOrbix_IDLSource)

protected:

  
  Standard_EXPORT     Handle_WOKernel_File GetUnitDescr() const;



private: 

  //! Executes step <br>
//!          Computes output files <br>
  Standard_EXPORT   virtual  void Execute(const Handle(WOKMake_HSequenceOfInputFile)& execlist) ;



};





// other Inline functions and methods (like "C++: function call" methods)


#endif
