// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKNT_ShellOutput_HeaderFile
#define _WOKNT_ShellOutput_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _OSD_File_HeaderFile
#include <OSD_File.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class TColStd_HSequenceOfHAsciiString;


//! defines root class to manage output of sub-process <br>
class WOKNT_ShellOutput  : public OSD_File {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  //! provides 'cleanup' functionality <br>
  Standard_EXPORT   virtual  void Cleanup() ;
~WOKNT_ShellOutput()
{
  Cleanup();
}
  //! clears output buffer(s) of sub-process <br>
  Standard_EXPORT   virtual  void Clear()  = 0;
  //! returns standard output of sub-process <br>
  Standard_EXPORT   virtual  Handle_TColStd_HSequenceOfHAsciiString Echo()  = 0;
  //! returns standard error output of sub-process <br>
  Standard_EXPORT   virtual  Handle_TColStd_HSequenceOfHAsciiString Errors()  = 0;
  //! creates an I/O object for reading a standard output of sub-process <br>
//!          and returns this object handle. <br>
//!  Warning: returns INVALID_HANDLE_VALUE in case of failure <br>
  Standard_EXPORT   virtual  Standard_Integer OpenStdOut()  = 0;
  //! closes an I/O object's handle opened by 'OpenStdOut' method <br>
  Standard_EXPORT   virtual  void CloseStdOut()  = 0;
  //! creates an I/O object for reading a standard error output of sub-process <br>
//!          and returns this object handle <br>
//!  Warning: returns INVALID_HANDLE_VALUE in case of failure <br>
  Standard_EXPORT   virtual  Standard_Integer OpenStdErr()  = 0;
  //! closes an I/O object's handle opened by 'OpenStdErr' method <br>
  Standard_EXPORT   virtual  void CloseStdErr()  = 0;
  //! waits for sub-process termination <br>
  Standard_EXPORT   virtual  Handle_TColStd_HSequenceOfHAsciiString SyncStdOut()  = 0;
  //! same as 'SyncStdOut' method <br>
  Standard_EXPORT   virtual  Handle_TColStd_HSequenceOfHAsciiString SyncStdErr()  = 0;





protected:

  //! protected constructor <br>
  Standard_EXPORT   WOKNT_ShellOutput();




private:





};





// other Inline functions and methods (like "C++: function call" methods)


#endif
