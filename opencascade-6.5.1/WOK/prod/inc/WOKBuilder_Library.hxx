// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKBuilder_Library_HeaderFile
#define _WOKBuilder_Library_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_WOKBuilder_Library_HeaderFile
#include <Handle_WOKBuilder_Library.hxx>
#endif

#ifndef _WOKBuilder_LibReferenceType_HeaderFile
#include <WOKBuilder_LibReferenceType.hxx>
#endif
#ifndef _Handle_WOKUtils_Path_HeaderFile
#include <Handle_WOKUtils_Path.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _WOKBuilder_Entity_HeaderFile
#include <WOKBuilder_Entity.hxx>
#endif
class WOKUtils_Path;
class TCollection_HAsciiString;
class WOKUtils_Param;



class WOKBuilder_Library : public WOKBuilder_Entity {

public:

  
  Standard_EXPORT     void SetReferenceType(const WOKBuilder_LibReferenceType atype) ;
  
  Standard_EXPORT     WOKBuilder_LibReferenceType ReferenceType() const;
  
  Standard_EXPORT     void SetName(const Handle(TCollection_HAsciiString)& aname) ;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString Name() const;
  
  Standard_EXPORT     void SetDirectory(const Handle(WOKUtils_Path)& adir) ;
  
  Standard_EXPORT     Handle_WOKUtils_Path Directory() const;
  //! Gets the file name of Library <br>
  Standard_EXPORT   virtual  Handle_TCollection_HAsciiString GetLibFileName(const WOKUtils_Param& params)  = 0;
  //! Sets the path of Library <br>
  Standard_EXPORT     void GetPath(const WOKUtils_Param& params) ;




  DEFINE_STANDARD_RTTI(WOKBuilder_Library)

protected:

  
  Standard_EXPORT   WOKBuilder_Library(const Handle(WOKUtils_Path)& apath);
  
  Standard_EXPORT   WOKBuilder_Library(const Handle(TCollection_HAsciiString)& aname,const Handle(WOKUtils_Path)& adir,const WOKBuilder_LibReferenceType areftype);



private: 


WOKBuilder_LibReferenceType myreftype;
Handle_WOKUtils_Path mydir;
Handle_TCollection_HAsciiString myname;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
