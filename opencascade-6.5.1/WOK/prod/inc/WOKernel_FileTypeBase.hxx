// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKernel_FileTypeBase_HeaderFile
#define _WOKernel_FileTypeBase_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_WOKernel_FileTypeBase_HeaderFile
#include <Handle_WOKernel_FileTypeBase.hxx>
#endif

#ifndef _WOKernel_DataMapOfFileType_HeaderFile
#include <WOKernel_DataMapOfFileType.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Handle_WOKernel_FileType_HeaderFile
#include <Handle_WOKernel_FileType.hxx>
#endif
#ifndef _Handle_WOKernel_HSequenceOfDBMSID_HeaderFile
#include <Handle_WOKernel_HSequenceOfDBMSID.hxx>
#endif
#ifndef _Handle_WOKernel_HSequenceOfStationID_HeaderFile
#include <Handle_WOKernel_HSequenceOfStationID.hxx>
#endif
#ifndef _Handle_WOKernel_Entity_HeaderFile
#include <Handle_WOKernel_Entity.hxx>
#endif
#ifndef _WOKernel_DBMSID_HeaderFile
#include <WOKernel_DBMSID.hxx>
#endif
#ifndef _WOKernel_StationID_HeaderFile
#include <WOKernel_StationID.hxx>
#endif
#ifndef _WOKernel_FileTypeIterator_HeaderFile
#include <WOKernel_FileTypeIterator.hxx>
#endif
class TColStd_HSequenceOfHAsciiString;
class WOKUtils_Param;
class TCollection_HAsciiString;
class WOKernel_FileType;
class WOKernel_HSequenceOfDBMSID;
class WOKernel_HSequenceOfStationID;
class WOKernel_Entity;


//! using  a map to  store the various file types known <br>
//!          by WOK <br>
class WOKernel_FileTypeBase : public MMgt_TShared {

public:

  //! instantiates the file type base <br>
  Standard_EXPORT   WOKernel_FileTypeBase();
  //! loads the WOK file types from a file <br>
  Standard_EXPORT     void Load(const WOKUtils_Param& parms) ;
  //! Sets Parameters <br>
  Standard_EXPORT     void SetParams(const WOKUtils_Param& parms) ;
  //! returns True if type is defined, False otherwise <br>
  Standard_EXPORT     Standard_Boolean IsType(const Handle(TCollection_HAsciiString)& atype) const;
  //! returns True if type is defined, False otherwise <br>
  Standard_EXPORT     Standard_Boolean IsType(const Standard_CString atype) const;
  //! returns the file type if known in the map <br>
  Standard_EXPORT     Handle_WOKernel_FileType Type(const Handle(TCollection_HAsciiString)& atype) const;
  //! returns the file type if known in the map <br>
  Standard_EXPORT     Handle_WOKernel_FileType Type(const Standard_CString atype) const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString TypeName(const Handle(WOKernel_FileType)& atype) const;
  //! Gets (calculates the list of templates args <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetNeededArguments(const WOKUtils_Param& params) ;
  //! Returns the list of needed parameters in a particular context <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetNeededParameters(const Handle(TCollection_HAsciiString)& entity,const Handle(TCollection_HAsciiString)& anesting,const Handle(WOKernel_HSequenceOfDBMSID)& dbmss,const Handle(WOKernel_HSequenceOfStationID)& stations) ;
  //! Returns the list of needed template arguments <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString NeededArguments() const;
  //! Sets Parameters used by templates for a particular Context <br>
//! <br>
  Standard_EXPORT     void SetNeededArguments(const Handle(WOKernel_Entity)& entity,const WOKernel_DBMSID adbms,const WOKernel_StationID astation) const;
  //! Calculates All Directories possibilities for a FileTypeBase in a Context. <br>
//! <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetDirectories(const Handle(WOKernel_Entity)& entity,const Handle(WOKernel_HSequenceOfDBMSID)& dbmss,const Handle(WOKernel_HSequenceOfStationID)& stations,const Standard_Boolean hasentity) const;
  //! Calculates All Directories possibilities for a FileTypeBase in a Context. <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetDirectories(const Handle(WOKernel_Entity)& Theentity,const Handle(WOKernel_HSequenceOfDBMSID)& dbmss,const Handle(WOKernel_HSequenceOfStationID)& stations,const Standard_Boolean getNestingdir,const Standard_Boolean getEntitydir,const Standard_Boolean getNestingAndEntitydir,const Standard_Boolean getDbmsdir,const Standard_Boolean getStationsdir,const Standard_Boolean getStationsAndDbmsdir,const Standard_Boolean getIndependentdir) const;
  //! Calculates All Files possibilities for a FileTypeBase in a Context. <br>
//! <br>
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetFiles(const Handle(WOKernel_Entity)& theentity,const Handle(WOKernel_HSequenceOfDBMSID)& dbmss,const Handle(WOKernel_HSequenceOfStationID)& stations,const Standard_Boolean hasentity) const;
  
  Standard_EXPORT     WOKernel_FileTypeIterator TypeIterator() const;




  DEFINE_STANDARD_RTTI(WOKernel_FileTypeBase)

protected:




private: 


WOKernel_DataMapOfFileType mytypes;
Handle_TColStd_HSequenceOfHAsciiString myneededargs;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
