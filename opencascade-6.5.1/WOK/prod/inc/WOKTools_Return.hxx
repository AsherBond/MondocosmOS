// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKTools_Return_HeaderFile
#define _WOKTools_Return_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Handle_WOKTools_HSequenceOfReturnValue_HeaderFile
#include <Handle_WOKTools_HSequenceOfReturnValue.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _WOKTools_InterpFileType_HeaderFile
#include <WOKTools_InterpFileType.hxx>
#endif
#ifndef _Handle_WOKTools_ReturnValue_HeaderFile
#include <Handle_WOKTools_ReturnValue.hxx>
#endif
class WOKTools_HSequenceOfReturnValue;
class TCollection_HAsciiString;
class WOKTools_ReturnValue;


//! Manages API return Statements <br>
class WOKTools_Return  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   WOKTools_Return();
  
  Standard_EXPORT     void Clear() ;
  
  Standard_EXPORT     void AddStringValue(const Standard_CString arg) ;
  
  Standard_EXPORT     void AddStringValue(const Handle(TCollection_HAsciiString)& arg) ;
  
  Standard_EXPORT     void AddStringParameter(const Handle(TCollection_HAsciiString)& aname,const Handle(TCollection_HAsciiString)& avalue) ;
  
  Standard_EXPORT     void AddIntegerValue(const Standard_Integer anint) ;
  
  Standard_EXPORT     void AddBooleanValue(const Standard_Boolean abool) ;
  
  Standard_EXPORT     void AddSetEnvironment(const Handle(TCollection_HAsciiString)& name,const Handle(TCollection_HAsciiString)& value) ;
  
  Standard_EXPORT     void AddSetEnvironment(const Standard_CString name,const Standard_CString value) ;
  
  Standard_EXPORT     void AddUnSetEnvironment(const Handle(TCollection_HAsciiString)& name) ;
  
  Standard_EXPORT     void AddUnSetEnvironment(const Standard_CString name) ;
  
  Standard_EXPORT     void AddChDir(const Handle(TCollection_HAsciiString)& path) ;
  
  Standard_EXPORT     void AddChDir(const Standard_CString path) ;
  
  Standard_EXPORT     void AddInterpFile(const Handle(TCollection_HAsciiString)& file,const WOKTools_InterpFileType type = WOKTools_CShell) ;
  
  Standard_EXPORT     void AddInterpFile(const Standard_CString file,const WOKTools_InterpFileType type = WOKTools_CShell) ;
  
  Standard_EXPORT     Handle_WOKTools_ReturnValue Value(const Standard_Integer anidx) const;
  
  Standard_EXPORT     Handle_WOKTools_HSequenceOfReturnValue Values() const;
  
  Standard_EXPORT     Standard_Integer Length() const;





protected:





private:



Handle_WOKTools_HSequenceOfReturnValue myargs;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
