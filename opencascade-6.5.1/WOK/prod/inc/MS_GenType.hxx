// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MS_GenType_HeaderFile
#define _MS_GenType_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_MS_GenType_HeaderFile
#include <Handle_MS_GenType.hxx>
#endif

#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Handle_TColStd_HSequenceOfHAsciiString_HeaderFile
#include <Handle_TColStd_HSequenceOfHAsciiString.hxx>
#endif
#ifndef _MS_Type_HeaderFile
#include <MS_Type.hxx>
#endif
#ifndef _Handle_MS_Class_HeaderFile
#include <Handle_MS_Class.hxx>
#endif
#ifndef _Handle_MS_Type_HeaderFile
#include <Handle_MS_Type.hxx>
#endif
#ifndef _Handle_MS_Package_HeaderFile
#include <Handle_MS_Package.hxx>
#endif
class TCollection_HAsciiString;
class TColStd_HSequenceOfHAsciiString;
class MS_Class;
class MS_Type;
class MS_Package;



class MS_GenType : public MS_Type {

public:

  //! create a type with a type constraint <br>
  Standard_EXPORT   MS_GenType(const Handle(MS_Class)& aClass,const Handle(TCollection_HAsciiString)& aName,const Handle(TCollection_HAsciiString)& aConstraint);
  //! create a type with an any constraint <br>
  Standard_EXPORT   MS_GenType(const Handle(MS_Class)& aClass,const Handle(TCollection_HAsciiString)& aName);
  //! return the constraint's type <br>
  Standard_EXPORT     Handle_MS_Type TYpe() const;
  //! returns the constraint type's name <br>
  Standard_EXPORT     Handle_TCollection_HAsciiString TYpeName() const;
  //! If the constraint type is generic, we set the instantiation types here <br>
//!          ex. :  G (item0; <br>
//!                    item1 as Sequence from TCollection(item0)) <br>
//! <br>
//!                 InsType are for type item1 -> item0 <br>
  Standard_EXPORT     void InstType(const Handle(TCollection_HAsciiString)& aTypeName) ;
  
  Standard_EXPORT     Handle_TColStd_HSequenceOfHAsciiString GetInstTypes() const;
  //! set no constraint checking <br>
  Standard_EXPORT     void SetAny() ;
  //! ask if the this type has a constraint checking <br>
  Standard_EXPORT     Standard_Boolean Any() const;
  
  Standard_EXPORT   virtual  void Package(const Handle(TCollection_HAsciiString)& aPackage) ;
  
  Standard_EXPORT   virtual  Handle_MS_Package Package() const;
  
  Standard_EXPORT     Standard_Boolean Private() const;




  DEFINE_STANDARD_RTTI(MS_GenType)

protected:




private: 


Handle_TCollection_HAsciiString myClass;
Standard_Boolean myAny;
Handle_TCollection_HAsciiString myType;
Handle_TColStd_HSequenceOfHAsciiString myInsType;
Standard_Boolean myPrivate;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
