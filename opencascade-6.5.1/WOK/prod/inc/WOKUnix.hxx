// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKUnix_HeaderFile
#define _WOKUnix_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
class WOKUnix_Signal;
class WOKUnix_AdmFile;
class WOKUnix_Path;
class WOKUnix_PathIterator;
class WOKUnix_FDescr;
class WOKUnix_RegExp;
class WOKUnix_Buffer;
class WOKUnix_FileBuffer;
class WOKUnix_NoBuffer;
class WOKUnix_CantBlockBuffer;
class WOKUnix_ProcessOutput;
class WOKUnix_MixedOutput;
class WOKUnix_OutErrOutput;
class WOKUnix_DumbOutput;
class WOKUnix_Process;
class WOKUnix_ProcessManager;
class WOKUnix_ShellManager;
class WOKUnix_ShellStatus;
class WOKUnix_ASyncStatus;
class WOKUnix_SyncStatus;
class WOKUnix_DumpScript;
class WOKUnix_Shell;
class WOKUnix_RemoteShell;
class WOKUnix_SequenceOfProcess;
class WOKUnix_StackOfDir;
class WOKUnix_SequenceNodeOfSequenceOfProcess;
class WOKUnix_StackNodeOfStackOfDir;
class WOKUnix_StackIteratorOfStackOfDir;



class WOKUnix  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   static  Standard_Integer SystemLastError() ;
  
  Standard_EXPORT   static  Standard_CString SystemMessage(const Standard_Integer i) ;
  
  Standard_EXPORT   static  Standard_CString LastSystemMessage() ;





protected:





private:




friend class WOKUnix_Signal;
friend class WOKUnix_AdmFile;
friend class WOKUnix_Path;
friend class WOKUnix_PathIterator;
friend class WOKUnix_FDescr;
friend class WOKUnix_RegExp;
friend class WOKUnix_Buffer;
friend class WOKUnix_FileBuffer;
friend class WOKUnix_NoBuffer;
friend class WOKUnix_CantBlockBuffer;
friend class WOKUnix_ProcessOutput;
friend class WOKUnix_MixedOutput;
friend class WOKUnix_OutErrOutput;
friend class WOKUnix_DumbOutput;
friend class WOKUnix_Process;
friend class WOKUnix_ProcessManager;
friend class WOKUnix_ShellManager;
friend class WOKUnix_ShellStatus;
friend class WOKUnix_ASyncStatus;
friend class WOKUnix_SyncStatus;
friend class WOKUnix_DumpScript;
friend class WOKUnix_Shell;
friend class WOKUnix_RemoteShell;
friend class WOKUnix_SequenceOfProcess;
friend class WOKUnix_StackOfDir;
friend class WOKUnix_SequenceNodeOfSequenceOfProcess;
friend class WOKUnix_StackNodeOfStackOfDir;
friend class WOKUnix_StackIteratorOfStackOfDir;

};





// other Inline functions and methods (like "C++: function call" methods)


#endif
