// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WOKUnix_PathIterator_HeaderFile
#define _WOKUnix_PathIterator_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _TCollection_AsciiString_HeaderFile
#include <TCollection_AsciiString.hxx>
#endif
#ifndef _Handle_WOKUnix_Path_HeaderFile
#include <Handle_WOKUnix_Path.hxx>
#endif
#ifndef _WOKUnix_DirEnt_HeaderFile
#include <WOKUnix_DirEnt.hxx>
#endif
#ifndef _WOKUnix_StackOfDir_HeaderFile
#include <WOKUnix_StackOfDir.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_CString_HeaderFile
#include <Standard_CString.hxx>
#endif
#ifndef _WOKUnix_Dir_HeaderFile
#include <WOKUnix_Dir.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_TCollection_HAsciiString_HeaderFile
#include <Handle_TCollection_HAsciiString.hxx>
#endif
class WOKUnix_Path;
class TCollection_HAsciiString;



class WOKUnix_PathIterator  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   WOKUnix_PathIterator(const Handle(WOKUnix_Path)& apath,const Standard_Boolean recursive = Standard_False,const Standard_CString mask = "*");
  
  Standard_EXPORT     void Next() ;
  
  Standard_EXPORT     Handle_WOKUnix_Path PathValue() const;
  
  Standard_EXPORT     Standard_Integer LevelValue() const;
  
  Standard_EXPORT     Handle_TCollection_HAsciiString NameValue() const;
  
  Standard_EXPORT     Handle_WOKUnix_Path BrowsedPath() const;
  
  Standard_EXPORT     Standard_Boolean More() const;
  
  Standard_EXPORT     void Destroy() ;
~WOKUnix_PathIterator()
{
  Destroy();
}





protected:





private:

  
  Standard_EXPORT     void SkipDots() ;
  
  Standard_EXPORT   static  Standard_Boolean IsDots(const Standard_CString aname) ;
  
  Standard_EXPORT     void Push(const Handle(WOKUnix_Path)& apath,const WOKUnix_Dir& adir) ;
  
  Standard_EXPORT     void Pop() ;


TCollection_AsciiString mymask;
Handle_WOKUnix_Path mypath;
WOKUnix_DirEnt mydata;
WOKUnix_StackOfDir mystack;
Standard_Boolean mymore;
Standard_Boolean myrecflag;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
