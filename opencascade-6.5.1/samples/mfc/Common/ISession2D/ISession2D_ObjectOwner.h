// File generated by CPPExt (Transient)
//
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.
//
#ifndef _ISession2D_ObjectOwner_HeaderFile
#define _ISession2D_ObjectOwner_HeaderFile

#include <Standard_Macro.hxx>
#include <Standard_DefineHandle.hxx>

#include <SelectMgr_EntityOwner.hxx>

DEFINE_STANDARD_HANDLE(ISession2D_ObjectOwner,SelectMgr_EntityOwner)
class ISession2D_ObjectOwner : public SelectMgr_EntityOwner {

public:

 // Methods PUBLIC
 // 
ISession2D_ObjectOwner(const Standard_Integer aPriority = 0);
ISession2D_ObjectOwner(const Handle(SelectMgr_SelectableObject)& aSO,const Standard_Integer aPriority = 0);
DEFINE_STANDARD_RTTI(ISession2D_ObjectOwner)

// Presentation Management
protected :
Handle(Graphic2d_GraphicObject) myGo;
public : 
virtual  void Hilight(const Handle(PrsMgr_PresentationManager)& aPM,const Standard_Integer aMode = 0) ;
virtual  void Unhilight(const Handle(PrsMgr_PresentationManager)& aPM,const Standard_Integer aMode = 0) ;

// Message Management
private: 
  TCollection_AsciiString myDumpMessage;

public :
void SetDumpMessage(TCollection_AsciiString NewDumpMessage)
{ myDumpMessage = NewDumpMessage;}
TCollection_AsciiString  DumpMessage()
{ return myDumpMessage;}
Standard_OStream& Dump(Standard_OStream& aStream)
{ aStream<<myDumpMessage;
  return aStream;}
friend Standard_EXPORT Standard_OStream& operator << (Standard_OStream& astream,const Handle(ISession2D_ObjectOwner)& aOwner)
{ return  aOwner->Dump(astream);}
};

// other inline functions and methods (like "C++: function call" methods)
//


#endif
