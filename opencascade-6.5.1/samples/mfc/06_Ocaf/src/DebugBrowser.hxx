// File generated by CPPExt (Value)
//                     Copyright (C) 1991,1995 by
//  
//                      MATRA DATAVISION, FRANCE
//  
// This software is furnished in accordance with the terms and conditions
// of the contract and with the inclusion of the above copyright notice.
// This software or any other copy thereof may not be provided or otherwise
// be made available to any other person. No title to an ownership of the
// software is hereby transferred.
//  
// At the termination of the contract, the software and all copies of this
// software must be deleted.

#ifndef _DebugBrowser_HeaderFile
#define _DebugBrowser_HeaderFile

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Handle_TDocStd_Document_HeaderFile
#include <Handle_TDocStd_Document.hxx>
#endif
class TDocStd_Document;
class DebugBrowser_Attr;
class DebugBrowser_DFTree;
class DebugBrowser_DFNode;
class DebugBrowser_AttrNode;
class DebugBrowser_LabelNode;
class DebugBrowser_ListNode;
class DebugBrowser_NSNode;
class DebugBrowser_GUI;
class DebugBrowser_DataMapOfIntegerExtString;
class DebugBrowser_QTGUI;
class DebugBrowser_DataMapNodeOfDataMapOfIntegerExtString;
class DebugBrowser_DataMapIteratorOfDataMapOfIntegerExtString;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

class DebugBrowser  {

public:

    inline void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    inline void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    inline void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
//    inline void  operator delete(void *anAddress, size_t size) 
//      { 
//        if (anAddress) Standard::Free((Standard_Address&)anAddress,size); 
//      }
 // Methods PUBLIC
 // 
Standard_EXPORT static  Standard_Integer DFBrowser(const Handle(TDocStd_Document)& theDoc) ;





protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //

friend class DebugBrowser_Attr;
friend class DebugBrowser_DFTree;
friend class DebugBrowser_DFNode;
friend class DebugBrowser_AttrNode;
friend class DebugBrowser_LabelNode;
friend class DebugBrowser_ListNode;
friend class DebugBrowser_NSNode;
friend class DebugBrowser_GUI;
friend class DebugBrowser_DataMapOfIntegerExtString;
friend class DebugBrowser_QTGUI;
friend class DebugBrowser_DataMapNodeOfDataMapOfIntegerExtString;
friend class DebugBrowser_DataMapIteratorOfDataMapOfIntegerExtString;

};





// other inline functions and methods (like "C++: function call" methods)
//


#endif
